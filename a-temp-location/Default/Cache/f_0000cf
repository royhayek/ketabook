define(['dart_sdk', 'packages/flutter/src/rendering/layer.dart', 'packages/flutter/src/painting/matrix_utils.dart', 'packages/vector_math/vector_math_64.dart', 'packages/flutter/src/painting/alignment.dart', 'packages/flutter/src/rendering/sliver.dart', 'packages/flutter/src/animation/curves.dart', 'packages/flutter/src/rendering/viewport_offset.dart'], (function load__packages__flutter__src__rendering__list_wheel_viewport_dart(dart_sdk, packages__flutter__src__rendering__layer$46dart, packages__flutter__src__painting__matrix_utils$46dart, packages__vector_math__vector_math_64$46dart, packages__flutter__src__painting__alignment$46dart, packages__flutter__src__rendering__sliver$46dart, packages__flutter__src__animation__curves$46dart, packages__flutter__src__rendering__viewport_offset$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const math = dart_sdk.math;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const box = packages__flutter__src__rendering__layer$46dart.src__rendering__box;
  const object = packages__flutter__src__rendering__layer$46dart.src__rendering__object;
  const layer = packages__flutter__src__rendering__layer$46dart.src__rendering__layer;
  const matrix_utils = packages__flutter__src__painting__matrix_utils$46dart.src__painting__matrix_utils;
  const vector_math_64 = packages__vector_math__vector_math_64$46dart.vector_math_64;
  const alignment = packages__flutter__src__painting__alignment$46dart.src__painting__alignment;
  const viewport = packages__flutter__src__rendering__sliver$46dart.src__rendering__viewport;
  const curves = packages__flutter__src__animation__curves$46dart.src__animation__curves;
  const viewport_offset = packages__flutter__src__rendering__viewport_offset$46dart.src__rendering__viewport_offset;
  var list_wheel_viewport = Object.create(dart.library);
  var $floor = dartx.floor;
  var $round = dartx.round;
  var RenderBoxTodouble = () => (RenderBoxTodouble = dart.constFn(dart.fnType(core.double, [box.RenderBox])))();
  var BoxConstraintsToNullN = () => (BoxConstraintsToNullN = dart.constFn(dart.fnType(core.Null, [box.BoxConstraints])))();
  var PaintingContextAndOffsetToNullN = () => (PaintingContextAndOffsetToNullN = dart.constFn(dart.fnType(core.Null, [object.PaintingContext, ui.Offset])))();
  const CT = Object.create(null);
  var L1 = "file:///D:/flutter/packages/flutter/lib/src/rendering/list_wheel_viewport.dart";
  var L0 = "package:flutter/src/rendering/list_wheel_viewport.dart";
  dart.defineLazy(CT, {
    get C0() {
      return C0 = dart.const({
        __proto__: ui.Clip.prototype,
        [_name]: "Clip.none",
        index: 0
      });
    },
    get C1() {
      return C1 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 0
      });
    },
    get C2() {
      return C2 = dart.const({
        __proto__: curves.Cubic.prototype,
        [Cubic_d]: 1,
        [Cubic_c]: 0.25,
        [Cubic_b]: 0.1,
        [Cubic_a]: 0.25
      });
    }
  }, false);
  list_wheel_viewport.ListWheelChildManager = class ListWheelChildManager extends core.Object {};
  (list_wheel_viewport.ListWheelChildManager.new = function() {
    ;
  }).prototype = list_wheel_viewport.ListWheelChildManager.prototype;
  dart.addTypeTests(list_wheel_viewport.ListWheelChildManager);
  dart.addTypeCaches(list_wheel_viewport.ListWheelChildManager);
  dart.setLibraryUri(list_wheel_viewport.ListWheelChildManager, L0);
  var index = dart.privateName(list_wheel_viewport, "ListWheelParentData.index");
  list_wheel_viewport.ListWheelParentData = class ListWheelParentData extends box.ContainerBoxParentData$(box.RenderBox) {
    get index() {
      return this[index];
    }
    set index(value) {
      this[index] = value;
    }
  };
  (list_wheel_viewport.ListWheelParentData.new = function() {
    this[index] = null;
    list_wheel_viewport.ListWheelParentData.__proto__.new.call(this);
    ;
  }).prototype = list_wheel_viewport.ListWheelParentData.prototype;
  dart.addTypeTests(list_wheel_viewport.ListWheelParentData);
  dart.addTypeCaches(list_wheel_viewport.ListWheelParentData);
  dart.setLibraryUri(list_wheel_viewport.ListWheelParentData, L0);
  dart.setFieldSignature(list_wheel_viewport.ListWheelParentData, () => ({
    __proto__: dart.getFields(list_wheel_viewport.ListWheelParentData.__proto__),
    index: dart.fieldType(dart.nullable(core.int))
  }));
  var _name = dart.privateName(ui, "_name");
  var C0;
  var _offAxisFraction = dart.privateName(list_wheel_viewport, "_offAxisFraction");
  var _useMagnifier = dart.privateName(list_wheel_viewport, "_useMagnifier");
  var _magnification = dart.privateName(list_wheel_viewport, "_magnification");
  var _overAndUnderCenterOpacity = dart.privateName(list_wheel_viewport, "_overAndUnderCenterOpacity");
  var _clipBehavior = dart.privateName(list_wheel_viewport, "_clipBehavior");
  var _clipRectLayer = dart.privateName(list_wheel_viewport, "_clipRectLayer");
  var _offset = dart.privateName(list_wheel_viewport, "_offset");
  var _diameterRatio = dart.privateName(list_wheel_viewport, "_diameterRatio");
  var _perspective = dart.privateName(list_wheel_viewport, "_perspective");
  var _itemExtent = dart.privateName(list_wheel_viewport, "_itemExtent");
  var _squeeze = dart.privateName(list_wheel_viewport, "_squeeze");
  var _renderChildrenOutsideViewport = dart.privateName(list_wheel_viewport, "_renderChildrenOutsideViewport");
  var _hasScrolled = dart.privateName(list_wheel_viewport, "_hasScrolled");
  var _viewportExtent = dart.privateName(list_wheel_viewport, "_viewportExtent");
  var _minEstimatedScrollExtent = dart.privateName(list_wheel_viewport, "_minEstimatedScrollExtent");
  var _maxEstimatedScrollExtent = dart.privateName(list_wheel_viewport, "_maxEstimatedScrollExtent");
  var _topScrollMarginExtent = dart.privateName(list_wheel_viewport, "_topScrollMarginExtent");
  var _getUntransformedPaintingCoordinateY = dart.privateName(list_wheel_viewport, "_getUntransformedPaintingCoordinateY");
  var _maxVisibleRadian = dart.privateName(list_wheel_viewport, "_maxVisibleRadian");
  var _getIntrinsicCrossAxis = dart.privateName(list_wheel_viewport, "_getIntrinsicCrossAxis");
  var _createChild = dart.privateName(list_wheel_viewport, "_createChild");
  var _destroyChild = dart.privateName(list_wheel_viewport, "_destroyChild");
  var _layoutChild = dart.privateName(list_wheel_viewport, "_layoutChild");
  var _shouldClipAtCurrentOffset = dart.privateName(list_wheel_viewport, "_shouldClipAtCurrentOffset");
  var _paintVisibleChildren = dart.privateName(list_wheel_viewport, "_paintVisibleChildren");
  var _paintTransformedChild = dart.privateName(list_wheel_viewport, "_paintTransformedChild");
  var _paintChildWithMagnifier = dart.privateName(list_wheel_viewport, "_paintChildWithMagnifier");
  var _paintChildCylindrically = dart.privateName(list_wheel_viewport, "_paintChildCylindrically");
  var _magnifyTransform = dart.privateName(list_wheel_viewport, "_magnifyTransform");
  var _centerOriginTransform = dart.privateName(list_wheel_viewport, "_centerOriginTransform");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var C1;
  var Cubic_d = dart.privateName(curves, "Cubic.d");
  var Cubic_c = dart.privateName(curves, "Cubic.c");
  var Cubic_b = dart.privateName(curves, "Cubic.b");
  var Cubic_a = dart.privateName(curves, "Cubic.a");
  var C2;
  var childManager$ = dart.privateName(list_wheel_viewport, "RenderListWheelViewport.childManager");
  const RenderBox_ContainerRenderObjectMixin$36 = class RenderBox_ContainerRenderObjectMixin extends box.RenderBox {};
  (RenderBox_ContainerRenderObjectMixin$36.new = function() {
    object.ContainerRenderObjectMixin$(box.RenderBox, list_wheel_viewport.ListWheelParentData)[dart.mixinNew].call(this);
    RenderBox_ContainerRenderObjectMixin$36.__proto__.new.call(this);
  }).prototype = RenderBox_ContainerRenderObjectMixin$36.prototype;
  dart.applyMixin(RenderBox_ContainerRenderObjectMixin$36, object.ContainerRenderObjectMixin$(box.RenderBox, list_wheel_viewport.ListWheelParentData));
  list_wheel_viewport.RenderListWheelViewport = class RenderListWheelViewport extends RenderBox_ContainerRenderObjectMixin$36 {
    get childManager() {
      return this[childManager$];
    }
    set childManager(value) {
      super.childManager = value;
    }
    get offset() {
      return this[_offset];
    }
    set offset(value) {
      if (value == null) dart.nullFailed(L1, 226, 29, "value");
      if (!(value != null)) dart.assertFailed(null, L1, 227, 12, "value != null");
      if (dart.equals(value, this[_offset])) return;
      if (dart.test(this.attached)) this[_offset].removeListener(dart.bind(this, _hasScrolled));
      this[_offset] = value;
      if (dart.test(this.attached)) this[_offset].addListener(dart.bind(this, _hasScrolled));
      this.markNeedsLayout();
    }
    get diameterRatio() {
      return this[_diameterRatio];
    }
    set diameterRatio(value) {
      if (value == null) dart.nullFailed(L1, 268, 28, "value");
      if (!(value != null)) dart.assertFailed(null, L1, 269, 12, "value != null");
      if (!(dart.notNull(value) > 0)) dart.assertFailed(list_wheel_viewport.RenderListWheelViewport.diameterRatioZeroMessage, L1, 271, 7, "value > 0");
      if (value == this[_diameterRatio]) return;
      this[_diameterRatio] = value;
      this.markNeedsPaint();
      this.markNeedsSemanticsUpdate();
    }
    get perspective() {
      return this[_perspective];
    }
    set perspective(value) {
      if (value == null) dart.nullFailed(L1, 297, 26, "value");
      if (!(value != null)) dart.assertFailed(null, L1, 298, 12, "value != null");
      if (!(dart.notNull(value) > 0)) dart.assertFailed(null, L1, 299, 12, "value > 0");
      if (!(dart.notNull(value) <= 0.01)) dart.assertFailed(list_wheel_viewport.RenderListWheelViewport.perspectiveTooHighMessage, L1, 301, 7, "value <= 0.01");
      if (value == this[_perspective]) return;
      this[_perspective] = value;
      this.markNeedsPaint();
      this.markNeedsSemanticsUpdate();
    }
    get offAxisFraction() {
      return this[_offAxisFraction];
    }
    set offAxisFraction(value) {
      if (value == null) dart.nullFailed(L1, 338, 30, "value");
      if (!(value != null)) dart.assertFailed(null, L1, 339, 12, "value != null");
      if (value == this[_offAxisFraction]) return;
      this[_offAxisFraction] = value;
      this.markNeedsPaint();
    }
    get useMagnifier() {
      return this[_useMagnifier];
    }
    set useMagnifier(value) {
      if (value == null) dart.nullFailed(L1, 351, 25, "value");
      if (!(value != null)) dart.assertFailed(null, L1, 352, 12, "value != null");
      if (dart.equals(value, this[_useMagnifier])) return;
      this[_useMagnifier] = value;
      this.markNeedsPaint();
    }
    get magnification() {
      return this[_magnification];
    }
    set magnification(value) {
      if (value == null) dart.nullFailed(L1, 370, 28, "value");
      if (!(value != null)) dart.assertFailed(null, L1, 371, 12, "value != null");
      if (!(dart.notNull(value) > 0)) dart.assertFailed(null, L1, 372, 12, "value > 0");
      if (value == this[_magnification]) return;
      this[_magnification] = value;
      this.markNeedsPaint();
    }
    get overAndUnderCenterOpacity() {
      return this[_overAndUnderCenterOpacity];
    }
    set overAndUnderCenterOpacity(value) {
      if (value == null) dart.nullFailed(L1, 389, 40, "value");
      if (!(value != null)) dart.assertFailed(null, L1, 390, 12, "value != null");
      if (!(dart.notNull(value) >= 0 && dart.notNull(value) <= 1)) dart.assertFailed(null, L1, 391, 12, "value >= 0 && value <= 1");
      if (value == this[_overAndUnderCenterOpacity]) return;
      this[_overAndUnderCenterOpacity] = value;
      this.markNeedsPaint();
    }
    get itemExtent() {
      return this[_itemExtent];
    }
    set itemExtent(value) {
      if (value == null) dart.nullFailed(L1, 406, 25, "value");
      if (!(value != null)) dart.assertFailed(null, L1, 407, 12, "value != null");
      if (!(dart.notNull(value) > 0)) dart.assertFailed(null, L1, 408, 12, "value > 0");
      if (value == this[_itemExtent]) return;
      this[_itemExtent] = value;
      this.markNeedsLayout();
    }
    get squeeze() {
      return this[_squeeze];
    }
    set squeeze(value) {
      if (value == null) dart.nullFailed(L1, 438, 22, "value");
      if (!(value != null)) dart.assertFailed(null, L1, 439, 12, "value != null");
      if (!(dart.notNull(value) > 0)) dart.assertFailed(null, L1, 440, 12, "value > 0");
      if (value == this[_squeeze]) return;
      this[_squeeze] = value;
      this.markNeedsLayout();
      this.markNeedsSemanticsUpdate();
    }
    get renderChildrenOutsideViewport() {
      return this[_renderChildrenOutsideViewport];
    }
    set renderChildrenOutsideViewport(value) {
      if (value == null) dart.nullFailed(L1, 460, 42, "value");
      if (!(value != null)) dart.assertFailed(null, L1, 461, 12, "value != null");
      if (!(!dart.test(this.renderChildrenOutsideViewport) || dart.equals(this.clipBehavior, ui.Clip.none))) dart.assertFailed(list_wheel_viewport.RenderListWheelViewport.clipBehaviorAndRenderChildrenOutsideViewportConflict, L1, 463, 7, "!renderChildrenOutsideViewport || clipBehavior == Clip.none");
      if (dart.equals(value, this[_renderChildrenOutsideViewport])) return;
      this[_renderChildrenOutsideViewport] = value;
      this.markNeedsLayout();
      this.markNeedsSemanticsUpdate();
    }
    get clipBehavior() {
      return this[_clipBehavior];
    }
    set clipBehavior(value) {
      if (value == null) dart.nullFailed(L1, 478, 25, "value");
      if (!(value != null)) dart.assertFailed(null, L1, 479, 12, "value != null");
      if (!dart.equals(value, this[_clipBehavior])) {
        this[_clipBehavior] = value;
        this.markNeedsPaint();
        this.markNeedsSemanticsUpdate();
      }
    }
    [_hasScrolled]() {
      this.markNeedsLayout();
      this.markNeedsSemanticsUpdate();
    }
    setupParentData(child) {
      object.RenderObject.as(child);
      if (child == null) dart.nullFailed(L1, 493, 37, "child");
      if (!list_wheel_viewport.ListWheelParentData.is(child.parentData)) child.parentData = new list_wheel_viewport.ListWheelParentData.new();
    }
    attach(owner) {
      object.PipelineOwner.as(owner);
      if (owner == null) dart.nullFailed(L1, 499, 29, "owner");
      super.attach(owner);
      this[_offset].addListener(dart.bind(this, _hasScrolled));
    }
    detach() {
      this[_offset].removeListener(dart.bind(this, _hasScrolled));
      super.detach();
    }
    get isRepaintBoundary() {
      return true;
    }
    get [_viewportExtent]() {
      if (!dart.test(this.hasSize)) dart.assertFailed(null, L1, 515, 12, "hasSize");
      return this.size.height;
    }
    get [_minEstimatedScrollExtent]() {
      if (!dart.test(this.hasSize)) dart.assertFailed(null, L1, 522, 12, "hasSize");
      if (this.childManager.childCount == null) return -1 / 0;
      return 0.0;
    }
    get [_maxEstimatedScrollExtent]() {
      if (!dart.test(this.hasSize)) dart.assertFailed(null, L1, 531, 12, "hasSize");
      if (this.childManager.childCount == null) return 1 / 0;
      return math.max(core.double, 0.0, (dart.nullCheck(this.childManager.childCount) - 1) * dart.notNull(this[_itemExtent]));
    }
    get [_topScrollMarginExtent]() {
      if (!dart.test(this.hasSize)) dart.assertFailed(null, L1, 544, 12, "hasSize");
      return -dart.notNull(this.size.height) / 2.0 + dart.notNull(this[_itemExtent]) / 2.0;
    }
    [_getUntransformedPaintingCoordinateY](layoutCoordinateY) {
      if (layoutCoordinateY == null) dart.nullFailed(L1, 552, 54, "layoutCoordinateY");
      return dart.notNull(layoutCoordinateY) - dart.notNull(this[_topScrollMarginExtent]) - dart.notNull(this.offset.pixels);
    }
    get [_maxVisibleRadian]() {
      if (dart.notNull(this[_diameterRatio]) < 1.0) return 3.141592653589793 / 2.0;
      return math.asin(1.0 / dart.notNull(this[_diameterRatio]));
    }
    [_getIntrinsicCrossAxis](childSize) {
      if (childSize == null) dart.nullFailed(L1, 570, 54, "childSize");
      let extent = 0.0;
      let child = this.firstChild;
      while (child != null) {
        extent = math.max(core.double, extent, childSize(child));
        child = this.childAfter(child);
      }
      return extent;
    }
    computeMinIntrinsicWidth(height) {
      if (height == null) dart.nullFailed(L1, 581, 42, "height");
      return this[_getIntrinsicCrossAxis](dart.fn(child => {
        if (child == null) dart.nullFailed(L1, 583, 18, "child");
        return child.getMinIntrinsicWidth(height);
      }, RenderBoxTodouble()));
    }
    computeMaxIntrinsicWidth(height) {
      if (height == null) dart.nullFailed(L1, 588, 42, "height");
      return this[_getIntrinsicCrossAxis](dart.fn(child => {
        if (child == null) dart.nullFailed(L1, 590, 18, "child");
        return child.getMaxIntrinsicWidth(height);
      }, RenderBoxTodouble()));
    }
    computeMinIntrinsicHeight(width) {
      if (width == null) dart.nullFailed(L1, 595, 43, "width");
      if (this.childManager.childCount == null) return 0.0;
      return dart.nullCheck(this.childManager.childCount) * dart.notNull(this[_itemExtent]);
    }
    computeMaxIntrinsicHeight(width) {
      if (width == null) dart.nullFailed(L1, 602, 43, "width");
      if (this.childManager.childCount == null) return 0.0;
      return dart.nullCheck(this.childManager.childCount) * dart.notNull(this[_itemExtent]);
    }
    get sizedByParent() {
      return true;
    }
    performResize() {
      this.size = this.constraints.biggest;
    }
    indexOf(child) {
      if (child == null) dart.nullFailed(L1, 619, 25, "child");
      if (!(child != null)) dart.assertFailed(null, L1, 620, 12, "child != null");
      let childParentData = list_wheel_viewport.ListWheelParentData.as(dart.nullCheck(child.parentData));
      if (!(childParentData.index != null)) dart.assertFailed(null, L1, 622, 12, "childParentData.index != null");
      return dart.nullCheck(childParentData.index);
    }
    scrollOffsetToIndex(scrollOffset) {
      if (scrollOffset == null) dart.nullFailed(L1, 627, 34, "scrollOffset");
      return (dart.notNull(scrollOffset) / dart.notNull(this.itemExtent))[$floor]();
    }
    indexToScrollOffset(index) {
      if (index == null) dart.nullFailed(L1, 630, 34, "index");
      return dart.notNull(index) * dart.notNull(this.itemExtent);
    }
    [_createChild](index, opts) {
      if (index == null) dart.nullFailed(L1, 632, 25, "index");
      let after = opts && 'after' in opts ? opts.after : null;
      this.invokeLayoutCallback(box.BoxConstraints, dart.fn(constraints => {
        if (constraints == null) dart.nullFailed(L1, 633, 58, "constraints");
        if (!dart.equals(constraints, this.constraints)) dart.assertFailed(null, L1, 634, 14, "constraints == this.constraints");
        this.childManager.createChild(index, {after: after});
      }, BoxConstraintsToNullN()));
    }
    [_destroyChild](child) {
      if (child == null) dart.nullFailed(L1, 639, 32, "child");
      this.invokeLayoutCallback(box.BoxConstraints, dart.fn(constraints => {
        if (constraints == null) dart.nullFailed(L1, 640, 58, "constraints");
        if (!dart.equals(constraints, this.constraints)) dart.assertFailed(null, L1, 641, 14, "constraints == this.constraints");
        this.childManager.removeChild(child);
      }, BoxConstraintsToNullN()));
    }
    [_layoutChild](child, constraints, index) {
      if (child == null) dart.nullFailed(L1, 646, 31, "child");
      if (constraints == null) dart.nullFailed(L1, 646, 53, "constraints");
      if (index == null) dart.nullFailed(L1, 646, 70, "index");
      child.layout(constraints, {parentUsesSize: true});
      let childParentData = list_wheel_viewport.ListWheelParentData.as(dart.nullCheck(child.parentData));
      let crossPosition = dart.notNull(this.size.width) / 2.0 - dart.notNull(child.size.width) / 2.0;
      childParentData.offset = new ui.Offset.new(crossPosition, this.indexToScrollOffset(index));
    }
    performLayout() {
      let childConstraints = this.constraints.copyWith({minHeight: this[_itemExtent], maxHeight: this[_itemExtent], minWidth: 0.0});
      let visibleHeight = dart.notNull(this.size.height) * dart.notNull(this[_squeeze]);
      if (dart.test(this.renderChildrenOutsideViewport)) visibleHeight = visibleHeight * 2;
      let firstVisibleOffset = dart.notNull(this.offset.pixels) + dart.notNull(this[_itemExtent]) / 2 - visibleHeight / 2;
      let lastVisibleOffset = firstVisibleOffset + visibleHeight;
      let targetFirstIndex = this.scrollOffsetToIndex(firstVisibleOffset);
      let targetLastIndex = this.scrollOffsetToIndex(lastVisibleOffset);
      if (dart.notNull(targetLastIndex) * dart.notNull(this[_itemExtent]) === lastVisibleOffset) targetLastIndex = dart.notNull(targetLastIndex) - 1;
      while (!dart.test(this.childManager.childExistsAt(targetFirstIndex)) && dart.notNull(targetFirstIndex) <= dart.notNull(targetLastIndex))
        targetFirstIndex = dart.notNull(targetFirstIndex) + 1;
      while (!dart.test(this.childManager.childExistsAt(targetLastIndex)) && dart.notNull(targetFirstIndex) <= dart.notNull(targetLastIndex))
        targetLastIndex = dart.notNull(targetLastIndex) - 1;
      if (dart.notNull(targetFirstIndex) > dart.notNull(targetLastIndex)) {
        while (this.firstChild != null)
          this[_destroyChild](dart.nullCheck(this.firstChild));
        return;
      }
      if (dart.notNull(this.childCount) > 0 && (dart.notNull(this.indexOf(dart.nullCheck(this.firstChild))) > dart.notNull(targetLastIndex) || dart.notNull(this.indexOf(dart.nullCheck(this.lastChild))) < dart.notNull(targetFirstIndex))) {
        while (this.firstChild != null)
          this[_destroyChild](dart.nullCheck(this.firstChild));
      }
      if (this.childCount === 0) {
        this[_createChild](targetFirstIndex);
        this[_layoutChild](dart.nullCheck(this.firstChild), childConstraints, targetFirstIndex);
      }
      let currentFirstIndex = this.indexOf(dart.nullCheck(this.firstChild));
      let currentLastIndex = this.indexOf(dart.nullCheck(this.lastChild));
      while (dart.notNull(currentFirstIndex) < dart.notNull(targetFirstIndex)) {
        this[_destroyChild](dart.nullCheck(this.firstChild));
        currentFirstIndex = dart.notNull(currentFirstIndex) + 1;
      }
      while (dart.notNull(currentLastIndex) > dart.notNull(targetLastIndex)) {
        this[_destroyChild](dart.nullCheck(this.lastChild));
        currentLastIndex = dart.notNull(currentLastIndex) - 1;
      }
      let child = this.firstChild;
      while (child != null) {
        child.layout(childConstraints, {parentUsesSize: true});
        child = this.childAfter(child);
      }
      while (dart.notNull(currentFirstIndex) > dart.notNull(targetFirstIndex)) {
        this[_createChild](dart.notNull(currentFirstIndex) - 1);
        this[_layoutChild](dart.nullCheck(this.firstChild), childConstraints, currentFirstIndex = dart.notNull(currentFirstIndex) - 1);
      }
      while (dart.notNull(currentLastIndex) < dart.notNull(targetLastIndex)) {
        this[_createChild](dart.notNull(currentLastIndex) + 1, {after: this.lastChild});
        this[_layoutChild](dart.nullCheck(this.lastChild), childConstraints, currentLastIndex = dart.notNull(currentLastIndex) + 1);
      }
      this.offset.applyViewportDimension(this[_viewportExtent]);
      let minScrollExtent = dart.test(this.childManager.childExistsAt(dart.notNull(targetFirstIndex) - 1)) ? this[_minEstimatedScrollExtent] : this.indexToScrollOffset(targetFirstIndex);
      let maxScrollExtent = dart.test(this.childManager.childExistsAt(dart.notNull(targetLastIndex) + 1)) ? this[_maxEstimatedScrollExtent] : this.indexToScrollOffset(targetLastIndex);
      this.offset.applyContentDimensions(minScrollExtent, maxScrollExtent);
    }
    [_shouldClipAtCurrentOffset]() {
      let highestUntransformedPaintY = this[_getUntransformedPaintingCoordinateY](0.0);
      return dart.notNull(highestUntransformedPaintY) < 0.0 || dart.notNull(this.size.height) < dart.notNull(highestUntransformedPaintY) + dart.notNull(this[_maxEstimatedScrollExtent]) + dart.notNull(this[_itemExtent]);
    }
    paint(context, offset) {
      if (context == null) dart.nullFailed(L1, 785, 30, "context");
      if (offset == null) dart.nullFailed(L1, 785, 46, "offset");
      if (dart.notNull(this.childCount) > 0) {
        if (dart.test(this[_shouldClipAtCurrentOffset]()) && !dart.equals(this.clipBehavior, ui.Clip.none)) {
          this[_clipRectLayer] = context.pushClipRect(this.needsCompositing, offset, ui.Offset.zero['&'](this.size), dart.bind(this, _paintVisibleChildren), {clipBehavior: this.clipBehavior, oldLayer: this[_clipRectLayer]});
        } else {
          this[_clipRectLayer] = null;
          this[_paintVisibleChildren](context, offset);
        }
      }
    }
    [_paintVisibleChildren](context, offset) {
      if (context == null) dart.nullFailed(L1, 806, 46, "context");
      if (offset == null) dart.nullFailed(L1, 806, 62, "offset");
      let childToPaint = this.firstChild;
      while (childToPaint != null) {
        let childParentData = list_wheel_viewport.ListWheelParentData.as(dart.nullCheck(childToPaint.parentData));
        this[_paintTransformedChild](childToPaint, context, offset, childParentData.offset);
        childToPaint = this.childAfter(childToPaint);
      }
    }
    [_paintTransformedChild](child, context, offset, layoutOffset) {
      if (child == null) dart.nullFailed(L1, 818, 15, "child");
      if (context == null) dart.nullFailed(L1, 819, 21, "context");
      if (offset == null) dart.nullFailed(L1, 820, 12, "offset");
      if (layoutOffset == null) dart.nullFailed(L1, 821, 12, "layoutOffset");
      let untransformedPaintingCoordinates = offset['+'](new ui.Offset.new(layoutOffset.dx, this[_getUntransformedPaintingCoordinateY](layoutOffset.dy)));
      let fractionalY = (dart.notNull(untransformedPaintingCoordinates.dy) + dart.notNull(this[_itemExtent]) / 2.0) / dart.notNull(this.size.height);
      let angle = -(fractionalY - 0.5) * 2.0 * dart.notNull(this[_maxVisibleRadian]) / dart.notNull(this.squeeze);
      if (angle > 3.141592653589793 / 2.0 || angle < -3.141592653589793 / 2.0) return;
      let transform = matrix_utils.MatrixUtils.createCylindricalProjectionTransform({radius: dart.notNull(this.size.height) * dart.notNull(this[_diameterRatio]) / 2.0, angle: angle, perspective: this[_perspective]});
      let offsetToCenter = new ui.Offset.new(untransformedPaintingCoordinates.dx, -dart.notNull(this[_topScrollMarginExtent]));
      let shouldApplyOffCenterDim = dart.notNull(this.overAndUnderCenterOpacity) < 1;
      if (dart.test(this.useMagnifier) || shouldApplyOffCenterDim) {
        this[_paintChildWithMagnifier](context, offset, child, transform, offsetToCenter, untransformedPaintingCoordinates);
      } else {
        this[_paintChildCylindrically](context, offset, child, transform, offsetToCenter);
      }
    }
    [_paintChildWithMagnifier](context, offset, child, cylindricalTransform, offsetToCenter, untransformedPaintingCoordinates) {
      if (context == null) dart.nullFailed(L1, 863, 21, "context");
      if (offset == null) dart.nullFailed(L1, 864, 12, "offset");
      if (child == null) dart.nullFailed(L1, 865, 15, "child");
      if (cylindricalTransform == null) dart.nullFailed(L1, 866, 13, "cylindricalTransform");
      if (offsetToCenter == null) dart.nullFailed(L1, 867, 12, "offsetToCenter");
      if (untransformedPaintingCoordinates == null) dart.nullFailed(L1, 868, 12, "untransformedPaintingCoordinates");
      let magnifierTopLinePosition = dart.notNull(this.size.height) / 2 - dart.notNull(this[_itemExtent]) * dart.notNull(this[_magnification]) / 2;
      let magnifierBottomLinePosition = dart.notNull(this.size.height) / 2 + dart.notNull(this[_itemExtent]) * dart.notNull(this[_magnification]) / 2;
      let isAfterMagnifierTopLine = dart.notNull(untransformedPaintingCoordinates.dy) >= magnifierTopLinePosition - dart.notNull(this[_itemExtent]) * dart.notNull(this[_magnification]);
      let isBeforeMagnifierBottomLine = dart.notNull(untransformedPaintingCoordinates.dy) <= magnifierBottomLinePosition;
      if (isAfterMagnifierTopLine && isBeforeMagnifierBottomLine) {
        let centerRect = new ui.Rect.fromLTWH(0.0, magnifierTopLinePosition, this.size.width, dart.notNull(this[_itemExtent]) * dart.notNull(this[_magnification]));
        let topHalfRect = new ui.Rect.fromLTWH(0.0, 0.0, this.size.width, magnifierTopLinePosition);
        let bottomHalfRect = new ui.Rect.fromLTWH(0.0, magnifierBottomLinePosition, this.size.width, magnifierTopLinePosition);
        context.pushClipRect(this.needsCompositing, offset, centerRect, dart.fn((context, offset) => {
          if (context == null) dart.nullFailed(L1, 903, 26, "context");
          if (offset == null) dart.nullFailed(L1, 903, 42, "offset");
          context.pushTransform(this.needsCompositing, offset, this[_magnifyTransform](), dart.fn((context, offset) => {
            if (context == null) dart.nullFailed(L1, 908, 30, "context");
            if (offset == null) dart.nullFailed(L1, 908, 46, "offset");
            context.paintChild(child, offset['+'](untransformedPaintingCoordinates));
          }, PaintingContextAndOffsetToNullN()));
        }, PaintingContextAndOffsetToNullN()));
        context.pushClipRect(this.needsCompositing, offset, dart.notNull(untransformedPaintingCoordinates.dy) <= magnifierTopLinePosition ? topHalfRect : bottomHalfRect, dart.fn((context, offset) => {
          if (context == null) dart.nullFailed(L1, 920, 26, "context");
          if (offset == null) dart.nullFailed(L1, 920, 42, "offset");
          this[_paintChildCylindrically](context, offset, child, cylindricalTransform, offsetToCenter);
        }, PaintingContextAndOffsetToNullN()));
      } else {
        this[_paintChildCylindrically](context, offset, child, cylindricalTransform, offsetToCenter);
      }
    }
    [_paintChildCylindrically](context, offset, child, cylindricalTransform, offsetToCenter) {
      if (context == null) dart.nullFailed(L1, 941, 21, "context");
      if (offset == null) dart.nullFailed(L1, 942, 12, "offset");
      if (child == null) dart.nullFailed(L1, 943, 15, "child");
      if (cylindricalTransform == null) dart.nullFailed(L1, 944, 13, "cylindricalTransform");
      if (offsetToCenter == null) dart.nullFailed(L1, 945, 12, "offsetToCenter");
      let painter = dart.fn((context, offset) => {
        if (context == null) dart.nullFailed(L1, 948, 62, "context");
        if (offset == null) dart.nullFailed(L1, 948, 78, "offset");
        context.paintChild(child, offset['+'](offsetToCenter));
      }, PaintingContextAndOffsetToNullN());
      let opacityPainter = dart.fn((context, offset) => {
        if (context == null) dart.nullFailed(L1, 957, 69, "context");
        if (offset == null) dart.nullFailed(L1, 957, 85, "offset");
        context.pushOpacity(offset, (dart.notNull(this.overAndUnderCenterOpacity) * 255)[$round](), painter);
      }, PaintingContextAndOffsetToNullN());
      context.pushTransform(this.needsCompositing, offset, this[_centerOriginTransform](cylindricalTransform), this.overAndUnderCenterOpacity === 1 ? painter : opacityPainter);
    }
    [_magnifyTransform]() {
      let magnify = vector_math_64.Matrix4.identity();
      magnify.translate(dart.notNull(this.size.width) * (-dart.notNull(this[_offAxisFraction]) + 0.5), dart.notNull(this.size.height) / 2);
      magnify.scale(this[_magnification], this[_magnification], this[_magnification]);
      magnify.translate(-dart.notNull(this.size.width) * (-dart.notNull(this[_offAxisFraction]) + 0.5), -dart.notNull(this.size.height) / 2);
      return magnify;
    }
    [_centerOriginTransform](originalMatrix) {
      if (originalMatrix == null) dart.nullFailed(L1, 982, 42, "originalMatrix");
      let result = vector_math_64.Matrix4.identity();
      let centerOriginTranslation = alignment.Alignment.center.alongSize(this.size);
      result.translate(dart.notNull(centerOriginTranslation.dx) * (-dart.notNull(this[_offAxisFraction]) * 2 + 1), centerOriginTranslation.dy);
      result.multiply(originalMatrix);
      result.translate(-dart.notNull(centerOriginTranslation.dx) * (-dart.notNull(this[_offAxisFraction]) * 2 + 1), -dart.notNull(centerOriginTranslation.dy));
      return result;
    }
    applyPaintTransform(child, transform) {
      box.RenderBox.as(child);
      if (child == null) dart.nullFailed(L1, 996, 38, "child");
      if (transform == null) dart.nullFailed(L1, 996, 53, "transform");
      let parentData = list_wheel_viewport.ListWheelParentData.as(dart.nullCheck(child.parentData));
      transform.translate(0.0, this[_getUntransformedPaintingCoordinateY](parentData.offset.dy));
    }
    describeApproximatePaintClip(child) {
      object.RenderObject.as(child);
      if (child == null) dart.nullFailed(L1, 1002, 51, "child");
      if (dart.test(this[_shouldClipAtCurrentOffset]())) {
        return ui.Offset.zero['&'](this.size);
      }
      return null;
    }
    hitTestChildren(result, opts) {
      if (result == null) dart.nullFailed(L1, 1010, 41, "result");
      let position = opts && 'position' in opts ? opts.position : null;
      if (position == null) dart.nullFailed(L1, 1010, 67, "position");
      return false;
    }
    getOffsetToReveal(target, alignment, opts) {
      if (target == null) dart.nullFailed(L1, 1013, 49, "target");
      if (alignment == null) dart.nullFailed(L1, 1013, 64, "alignment");
      let rect = opts && 'rect' in opts ? opts.rect : null;
      rect == null ? rect = target.paintBounds : null;
      let child = target;
      while (!dart.equals(child.parent, this))
        child = object.RenderObject.as(dart.nullCheck(child.parent));
      let parentData = list_wheel_viewport.ListWheelParentData.as(dart.nullCheck(child.parentData));
      let targetOffset = parentData.offset.dy;
      let transform = target.getTransformTo(child);
      let bounds = matrix_utils.MatrixUtils.transformRect(transform, rect);
      let targetRect = bounds.translate(0.0, (dart.notNull(this.size.height) - dart.notNull(this.itemExtent)) / 2);
      return new viewport.RevealedOffset.new({offset: targetOffset, rect: targetRect});
    }
    showOnScreen(opts) {
      let descendant = opts && 'descendant' in opts ? opts.descendant : null;
      let rect = opts && 'rect' in opts ? opts.rect : null;
      let duration = opts && 'duration' in opts ? opts.duration : C1 || CT.C1;
      if (duration == null) dart.nullFailed(L1, 1039, 14, "duration");
      let curve = opts && 'curve' in opts ? opts.curve : C2 || CT.C2;
      if (curve == null) dart.nullFailed(L1, 1040, 11, "curve");
      if (descendant != null) {
        let revealedOffset = this.getOffsetToReveal(descendant, 0.5, {rect: rect});
        if (dart.equals(duration, core.Duration.zero)) {
          this.offset.jumpTo(revealedOffset.offset);
        } else {
          this.offset.animateTo(revealedOffset.offset, {duration: duration, curve: curve});
        }
        rect = revealedOffset.rect;
      }
      super.showOnScreen({rect: rect, duration: duration, curve: curve});
    }
  };
  (list_wheel_viewport.RenderListWheelViewport.new = function(opts) {
    let childManager = opts && 'childManager' in opts ? opts.childManager : null;
    if (childManager == null) dart.nullFailed(L1, 138, 19, "childManager");
    let offset = opts && 'offset' in opts ? opts.offset : null;
    if (offset == null) dart.nullFailed(L1, 139, 29, "offset");
    let diameterRatio = opts && 'diameterRatio' in opts ? opts.diameterRatio : 2;
    if (diameterRatio == null) dart.nullFailed(L1, 140, 12, "diameterRatio");
    let perspective = opts && 'perspective' in opts ? opts.perspective : 0.003;
    if (perspective == null) dart.nullFailed(L1, 141, 12, "perspective");
    let offAxisFraction = opts && 'offAxisFraction' in opts ? opts.offAxisFraction : 0;
    if (offAxisFraction == null) dart.nullFailed(L1, 142, 12, "offAxisFraction");
    let useMagnifier = opts && 'useMagnifier' in opts ? opts.useMagnifier : false;
    if (useMagnifier == null) dart.nullFailed(L1, 143, 10, "useMagnifier");
    let magnification = opts && 'magnification' in opts ? opts.magnification : 1;
    if (magnification == null) dart.nullFailed(L1, 144, 12, "magnification");
    let overAndUnderCenterOpacity = opts && 'overAndUnderCenterOpacity' in opts ? opts.overAndUnderCenterOpacity : 1;
    if (overAndUnderCenterOpacity == null) dart.nullFailed(L1, 145, 12, "overAndUnderCenterOpacity");
    let itemExtent = opts && 'itemExtent' in opts ? opts.itemExtent : null;
    if (itemExtent == null) dart.nullFailed(L1, 146, 21, "itemExtent");
    let squeeze = opts && 'squeeze' in opts ? opts.squeeze : 1;
    if (squeeze == null) dart.nullFailed(L1, 147, 12, "squeeze");
    let renderChildrenOutsideViewport = opts && 'renderChildrenOutsideViewport' in opts ? opts.renderChildrenOutsideViewport : false;
    if (renderChildrenOutsideViewport == null) dart.nullFailed(L1, 148, 10, "renderChildrenOutsideViewport");
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C0 || CT.C0;
    if (clipBehavior == null) dart.nullFailed(L1, 149, 10, "clipBehavior");
    let children = opts && 'children' in opts ? opts.children : null;
    this[_offAxisFraction] = 0.0;
    this[_useMagnifier] = false;
    this[_magnification] = 1.0;
    this[_overAndUnderCenterOpacity] = 1.0;
    this[_clipBehavior] = ui.Clip.hardEdge;
    this[_clipRectLayer] = null;
    this[childManager$] = childManager;
    if (!(childManager != null)) dart.assertFailed(null, L1, 151, 15, "childManager != null");
    if (!(offset != null)) dart.assertFailed(null, L1, 152, 15, "offset != null");
    if (!(diameterRatio != null)) dart.assertFailed(null, L1, 153, 15, "diameterRatio != null");
    if (!(dart.notNull(diameterRatio) > 0)) dart.assertFailed(list_wheel_viewport.RenderListWheelViewport.diameterRatioZeroMessage, L1, 154, 15, "diameterRatio > 0");
    if (!(perspective != null)) dart.assertFailed(null, L1, 155, 15, "perspective != null");
    if (!(dart.notNull(perspective) > 0)) dart.assertFailed(null, L1, 156, 15, "perspective > 0");
    if (!(dart.notNull(perspective) <= 0.01)) dart.assertFailed(list_wheel_viewport.RenderListWheelViewport.perspectiveTooHighMessage, L1, 157, 15, "perspective <= 0.01");
    if (!(offAxisFraction != null)) dart.assertFailed(null, L1, 158, 15, "offAxisFraction != null");
    if (!(useMagnifier != null)) dart.assertFailed(null, L1, 159, 15, "useMagnifier != null");
    if (!(magnification != null)) dart.assertFailed(null, L1, 160, 15, "magnification != null");
    if (!(dart.notNull(magnification) > 0)) dart.assertFailed(null, L1, 161, 15, "magnification > 0");
    if (!(overAndUnderCenterOpacity != null)) dart.assertFailed(null, L1, 162, 15, "overAndUnderCenterOpacity != null");
    if (!(dart.notNull(overAndUnderCenterOpacity) >= 0 && dart.notNull(overAndUnderCenterOpacity) <= 1)) dart.assertFailed(null, L1, 163, 15, "overAndUnderCenterOpacity >= 0 && overAndUnderCenterOpacity <= 1");
    if (!(itemExtent != null)) dart.assertFailed(null, L1, 164, 15, "itemExtent != null");
    if (!(squeeze != null)) dart.assertFailed(null, L1, 165, 15, "squeeze != null");
    if (!(dart.notNull(squeeze) > 0)) dart.assertFailed(null, L1, 166, 15, "squeeze > 0");
    if (!(dart.notNull(itemExtent) > 0)) dart.assertFailed(null, L1, 167, 15, "itemExtent > 0");
    if (!(renderChildrenOutsideViewport != null)) dart.assertFailed(null, L1, 168, 15, "renderChildrenOutsideViewport != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, L1, 169, 15, "clipBehavior != null");
    if (!(!dart.test(renderChildrenOutsideViewport) || dart.equals(clipBehavior, ui.Clip.none))) dart.assertFailed(list_wheel_viewport.RenderListWheelViewport.clipBehaviorAndRenderChildrenOutsideViewportConflict, L1, 171, 10, "!renderChildrenOutsideViewport || clipBehavior == Clip.none");
    this[_offset] = offset;
    this[_diameterRatio] = diameterRatio;
    this[_perspective] = perspective;
    this[_offAxisFraction] = offAxisFraction;
    this[_useMagnifier] = useMagnifier;
    this[_magnification] = magnification;
    this[_overAndUnderCenterOpacity] = overAndUnderCenterOpacity;
    this[_itemExtent] = itemExtent;
    this[_squeeze] = squeeze;
    this[_renderChildrenOutsideViewport] = renderChildrenOutsideViewport;
    this[_clipBehavior] = clipBehavior;
    list_wheel_viewport.RenderListWheelViewport.__proto__.new.call(this);
    this.addAll(children);
  }).prototype = list_wheel_viewport.RenderListWheelViewport.prototype;
  dart.addTypeTests(list_wheel_viewport.RenderListWheelViewport);
  dart.addTypeCaches(list_wheel_viewport.RenderListWheelViewport);
  list_wheel_viewport.RenderListWheelViewport[dart.implements] = () => [viewport.RenderAbstractViewport];
  dart.setMethodSignature(list_wheel_viewport.RenderListWheelViewport, () => ({
    __proto__: dart.getMethods(list_wheel_viewport.RenderListWheelViewport.__proto__),
    [_hasScrolled]: dart.fnType(dart.void, []),
    [_getUntransformedPaintingCoordinateY]: dart.fnType(core.double, [core.double]),
    [_getIntrinsicCrossAxis]: dart.fnType(core.double, [dart.fnType(core.double, [box.RenderBox])]),
    indexOf: dart.fnType(core.int, [box.RenderBox]),
    scrollOffsetToIndex: dart.fnType(core.int, [core.double]),
    indexToScrollOffset: dart.fnType(core.double, [core.int]),
    [_createChild]: dart.fnType(dart.void, [core.int], {after: dart.nullable(box.RenderBox)}, {}),
    [_destroyChild]: dart.fnType(dart.void, [box.RenderBox]),
    [_layoutChild]: dart.fnType(dart.void, [box.RenderBox, box.BoxConstraints, core.int]),
    [_shouldClipAtCurrentOffset]: dart.fnType(core.bool, []),
    [_paintVisibleChildren]: dart.fnType(dart.void, [object.PaintingContext, ui.Offset]),
    [_paintTransformedChild]: dart.fnType(dart.void, [box.RenderBox, object.PaintingContext, ui.Offset, ui.Offset]),
    [_paintChildWithMagnifier]: dart.fnType(dart.void, [object.PaintingContext, ui.Offset, box.RenderBox, vector_math_64.Matrix4, ui.Offset, ui.Offset]),
    [_paintChildCylindrically]: dart.fnType(dart.void, [object.PaintingContext, ui.Offset, box.RenderBox, vector_math_64.Matrix4, ui.Offset]),
    [_magnifyTransform]: dart.fnType(vector_math_64.Matrix4, []),
    [_centerOriginTransform]: dart.fnType(vector_math_64.Matrix4, [vector_math_64.Matrix4]),
    getOffsetToReveal: dart.fnType(viewport.RevealedOffset, [object.RenderObject, core.double], {rect: dart.nullable(ui.Rect)}, {})
  }));
  dart.setGetterSignature(list_wheel_viewport.RenderListWheelViewport, () => ({
    __proto__: dart.getGetters(list_wheel_viewport.RenderListWheelViewport.__proto__),
    offset: viewport_offset.ViewportOffset,
    diameterRatio: core.double,
    perspective: core.double,
    offAxisFraction: core.double,
    useMagnifier: core.bool,
    magnification: core.double,
    overAndUnderCenterOpacity: core.double,
    itemExtent: core.double,
    squeeze: core.double,
    renderChildrenOutsideViewport: core.bool,
    clipBehavior: ui.Clip,
    [_viewportExtent]: core.double,
    [_minEstimatedScrollExtent]: core.double,
    [_maxEstimatedScrollExtent]: core.double,
    [_topScrollMarginExtent]: core.double,
    [_maxVisibleRadian]: core.double
  }));
  dart.setSetterSignature(list_wheel_viewport.RenderListWheelViewport, () => ({
    __proto__: dart.getSetters(list_wheel_viewport.RenderListWheelViewport.__proto__),
    offset: viewport_offset.ViewportOffset,
    diameterRatio: core.double,
    perspective: core.double,
    offAxisFraction: core.double,
    useMagnifier: core.bool,
    magnification: core.double,
    overAndUnderCenterOpacity: core.double,
    itemExtent: core.double,
    squeeze: core.double,
    renderChildrenOutsideViewport: core.bool,
    clipBehavior: ui.Clip
  }));
  dart.setLibraryUri(list_wheel_viewport.RenderListWheelViewport, L0);
  dart.setFieldSignature(list_wheel_viewport.RenderListWheelViewport, () => ({
    __proto__: dart.getFields(list_wheel_viewport.RenderListWheelViewport.__proto__),
    childManager: dart.finalFieldType(list_wheel_viewport.ListWheelChildManager),
    [_offset]: dart.fieldType(viewport_offset.ViewportOffset),
    [_diameterRatio]: dart.fieldType(core.double),
    [_perspective]: dart.fieldType(core.double),
    [_offAxisFraction]: dart.fieldType(core.double),
    [_useMagnifier]: dart.fieldType(core.bool),
    [_magnification]: dart.fieldType(core.double),
    [_overAndUnderCenterOpacity]: dart.fieldType(core.double),
    [_itemExtent]: dart.fieldType(core.double),
    [_squeeze]: dart.fieldType(core.double),
    [_renderChildrenOutsideViewport]: dart.fieldType(core.bool),
    [_clipBehavior]: dart.fieldType(ui.Clip),
    [_clipRectLayer]: dart.fieldType(dart.nullable(layer.ClipRectLayer))
  }));
  dart.defineLazy(list_wheel_viewport.RenderListWheelViewport, {
    /*list_wheel_viewport.RenderListWheelViewport.defaultDiameterRatio*/get defaultDiameterRatio() {
      return 2;
    },
    /*list_wheel_viewport.RenderListWheelViewport.defaultPerspective*/get defaultPerspective() {
      return 0.003;
    },
    /*list_wheel_viewport.RenderListWheelViewport.diameterRatioZeroMessage*/get diameterRatioZeroMessage() {
      return "You can't set a diameterRatio of 0 or of a negative number. It would imply a cylinder of 0 in diameter in which case nothing will be drawn.";
    },
    /*list_wheel_viewport.RenderListWheelViewport.perspectiveTooHighMessage*/get perspectiveTooHighMessage() {
      return "A perspective too high will be clipped in the z-axis and therefore not renderable. Value must be between 0 and 0.01.";
    },
    /*list_wheel_viewport.RenderListWheelViewport.clipBehaviorAndRenderChildrenOutsideViewportConflict*/get clipBehaviorAndRenderChildrenOutsideViewportConflict() {
      return "Cannot renderChildrenOutsideViewport and clip since children rendered outside will be clipped anyway.";
    }
  }, false);
  dart.trackLibraries("packages/flutter/src/rendering/list_wheel_viewport.dart", {
    "package:flutter/src/rendering/list_wheel_viewport.dart": list_wheel_viewport
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["list_wheel_viewport.dart"],"names":[],"mappings":"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","file":"../../../../../../packages/flutter/src/rendering/list_wheel_viewport.dart.lib.js"}');
  // Exports:
  return {
    src__rendering__list_wheel_viewport: list_wheel_viewport
  };
}));

//# sourceMappingURL=list_wheel_viewport.dart.lib.js.map
