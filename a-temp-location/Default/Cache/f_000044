define(['dart_sdk', 'packages/intl/src/intl_helpers.dart', 'packages/flutter/src/cupertino/date_picker.dart', 'packages/flutter_localizations/src/widgets_localizations.dart', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter_localizations/src/utils/date_localizations.dart', 'packages/flutter/src/foundation/synchronous_future.dart'], (function load__packages__flutter_localizations__src__l10n__generated_cupertino_localizations_dart(dart_sdk, packages__intl__src__intl_helpers$46dart, packages__flutter__src__cupertino__date_picker$46dart, packages__flutter_localizations__src__widgets_localizations$46dart, packages__flutter__src__widgets__widget_span$46dart, packages__flutter_localizations__src__utils__date_localizations$46dart, packages__flutter__src__foundation__synchronous_future$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const _interceptors = dart_sdk._interceptors;
  const collection = dart_sdk.collection;
  const ui = dart_sdk.ui;
  const async = dart_sdk.async;
  const _js_helper = dart_sdk._js_helper;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const intl = packages__intl__src__intl_helpers$46dart.intl;
  const localizations = packages__flutter__src__cupertino__date_picker$46dart.src__cupertino__localizations;
  const widgets_localizations = packages__flutter_localizations__src__widgets_localizations$46dart.src__widgets_localizations;
  const localizations$ = packages__flutter__src__widgets__widget_span$46dart.src__widgets__localizations;
  const date_localizations = packages__flutter_localizations__src__utils__date_localizations$46dart.src__utils__date_localizations;
  const synchronous_future = packages__flutter__src__foundation__synchronous_future$46dart.src__foundation__synchronous_future;
  var generated_cupertino_localizations = Object.create(dart.library);
  var cupertino_localizations = Object.create(dart.library);
  var $_get = dartx._get;
  var $replaceFirst = dartx.replaceFirst;
  var $putIfAbsent = dartx.putIfAbsent;
  var $length = dartx.length;
  var $toString = dartx.toString;
  var StringL = () => (StringL = dart.constFn(dart.legacy(core.String)))();
  var JSArrayOfStringL = () => (JSArrayOfStringL = dart.constFn(_interceptors.JSArray$(StringL())))();
  var LocalizationsDelegateL = () => (LocalizationsDelegateL = dart.constFn(dart.legacy(localizations$.LocalizationsDelegate)))();
  var HashSetOfStringL = () => (HashSetOfStringL = dart.constFn(collection.HashSet$(StringL())))();
  var StringLTovoid = () => (StringLTovoid = dart.constFn(dart.fnType(dart.void, [StringL()])))();
  var CupertinoLocalizationsL = () => (CupertinoLocalizationsL = dart.constFn(dart.legacy(localizations.CupertinoLocalizations)))();
  var SynchronousFutureOfCupertinoLocalizationsL = () => (SynchronousFutureOfCupertinoLocalizationsL = dart.constFn(synchronous_future.SynchronousFuture$(CupertinoLocalizationsL())))();
  var SynchronousFutureLOfCupertinoLocalizationsL = () => (SynchronousFutureLOfCupertinoLocalizationsL = dart.constFn(dart.legacy(SynchronousFutureOfCupertinoLocalizationsL())))();
  var VoidToSynchronousFutureLOfCupertinoLocalizationsL = () => (VoidToSynchronousFutureLOfCupertinoLocalizationsL = dart.constFn(dart.fnType(SynchronousFutureLOfCupertinoLocalizationsL(), [])))();
  var _GlobalCupertinoLocalizationsDelegateL = () => (_GlobalCupertinoLocalizationsDelegateL = dart.constFn(dart.legacy(cupertino_localizations._GlobalCupertinoLocalizationsDelegate)))();
  var LocaleL = () => (LocaleL = dart.constFn(dart.legacy(ui.Locale)))();
  var FutureOfCupertinoLocalizationsL = () => (FutureOfCupertinoLocalizationsL = dart.constFn(async.Future$(CupertinoLocalizationsL())))();
  var FutureLOfCupertinoLocalizationsL = () => (FutureLOfCupertinoLocalizationsL = dart.constFn(dart.legacy(FutureOfCupertinoLocalizationsL())))();
  var LinkedMapOfLocaleL$FutureLOfCupertinoLocalizationsL = () => (LinkedMapOfLocaleL$FutureLOfCupertinoLocalizationsL = dart.constFn(_js_helper.LinkedMap$(LocaleL(), FutureLOfCupertinoLocalizationsL())))();
  const CT = Object.create(null);
  var L3 = "file:///D:/flutter/packages/flutter_localizations/lib/src/l10n/generated_cupertino_localizations.dart";
  var L0 = "file:///D:/flutter/packages/flutter_localizations/lib/src/cupertino_localizations.dart";
  var L1 = "package:flutter_localizations/src/cupertino_localizations.dart";
  var L2 = "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart";
  dart.defineLazy(CT, {
    get C0() {
      return C0 = dart.const({
        __proto__: cupertino_localizations._GlobalCupertinoLocalizationsDelegate.prototype
      });
    },
    get C2() {
      return C2 = dart.const({
        __proto__: widgets_localizations._WidgetsLocalizationsDelegate.prototype
      });
    },
    get C1() {
      return C1 = dart.constList([C0 || CT.C0, C2 || CT.C2], LocalizationsDelegateL());
    },
    get C3() {
      return C3 = dart.constList(["af", "am", "ar", "as", "az", "be", "bg", "bn", "bs", "ca", "cs", "da", "de", "el", "en", "es", "et", "eu", "fa", "fi", "fil", "fr", "gl", "gsw", "gu", "he", "hi", "hr", "hu", "hy", "id", "is", "it", "ja", "ka", "kk", "km", "kn", "ko", "ky", "lo", "lt", "lv", "mk", "ml", "mn", "mr", "ms", "my", "nb", "ne", "nl", "no", "or", "pa", "pl", "pt", "ro", "ru", "si", "sk", "sl", "sq", "sr", "sv", "sw", "ta", "te", "th", "tl", "tr", "uk", "ur", "uz", "vi", "zh", "zu"], StringL());
    }
  }, false);
  var _localeName = dart.privateName(cupertino_localizations, "_localeName");
  var _fullYearFormat = dart.privateName(cupertino_localizations, "_fullYearFormat");
  var _dayFormat = dart.privateName(cupertino_localizations, "_dayFormat");
  var _mediumDateFormat = dart.privateName(cupertino_localizations, "_mediumDateFormat");
  var _singleDigitHourFormat = dart.privateName(cupertino_localizations, "_singleDigitHourFormat");
  var _singleDigitMinuteFormat = dart.privateName(cupertino_localizations, "_singleDigitMinuteFormat");
  var _doubleDigitMinuteFormat = dart.privateName(cupertino_localizations, "_doubleDigitMinuteFormat");
  var _singleDigitSecondFormat = dart.privateName(cupertino_localizations, "_singleDigitSecondFormat");
  var _decimalFormat = dart.privateName(cupertino_localizations, "_decimalFormat");
  var _localeName$ = dart.privateName(cupertino_localizations, "GlobalCupertinoLocalizations._localeName");
  var _fullYearFormat$ = dart.privateName(cupertino_localizations, "GlobalCupertinoLocalizations._fullYearFormat");
  var _dayFormat$ = dart.privateName(cupertino_localizations, "GlobalCupertinoLocalizations._dayFormat");
  var _mediumDateFormat$ = dart.privateName(cupertino_localizations, "GlobalCupertinoLocalizations._mediumDateFormat");
  var _singleDigitHourFormat$ = dart.privateName(cupertino_localizations, "GlobalCupertinoLocalizations._singleDigitHourFormat");
  var _singleDigitMinuteFormat$ = dart.privateName(cupertino_localizations, "GlobalCupertinoLocalizations._singleDigitMinuteFormat");
  var _doubleDigitMinuteFormat$ = dart.privateName(cupertino_localizations, "GlobalCupertinoLocalizations._doubleDigitMinuteFormat");
  var _singleDigitSecondFormat$ = dart.privateName(cupertino_localizations, "GlobalCupertinoLocalizations._singleDigitSecondFormat");
  var _decimalFormat$ = dart.privateName(cupertino_localizations, "GlobalCupertinoLocalizations._decimalFormat");
  var C0;
  var C2;
  var C1;
  cupertino_localizations.GlobalCupertinoLocalizations = class GlobalCupertinoLocalizations extends core.Object {
    get [_localeName]() {
      return this[_localeName$];
    }
    set [_localeName](value) {
      super[_localeName] = value;
    }
    get [_fullYearFormat]() {
      return this[_fullYearFormat$];
    }
    set [_fullYearFormat](value) {
      super[_fullYearFormat] = value;
    }
    get [_dayFormat]() {
      return this[_dayFormat$];
    }
    set [_dayFormat](value) {
      super[_dayFormat] = value;
    }
    get [_mediumDateFormat]() {
      return this[_mediumDateFormat$];
    }
    set [_mediumDateFormat](value) {
      super[_mediumDateFormat] = value;
    }
    get [_singleDigitHourFormat]() {
      return this[_singleDigitHourFormat$];
    }
    set [_singleDigitHourFormat](value) {
      super[_singleDigitHourFormat] = value;
    }
    get [_singleDigitMinuteFormat]() {
      return this[_singleDigitMinuteFormat$];
    }
    set [_singleDigitMinuteFormat](value) {
      super[_singleDigitMinuteFormat] = value;
    }
    get [_doubleDigitMinuteFormat]() {
      return this[_doubleDigitMinuteFormat$];
    }
    set [_doubleDigitMinuteFormat](value) {
      super[_doubleDigitMinuteFormat] = value;
    }
    get [_singleDigitSecondFormat]() {
      return this[_singleDigitSecondFormat$];
    }
    set [_singleDigitSecondFormat](value) {
      super[_singleDigitSecondFormat] = value;
    }
    get [_decimalFormat]() {
      return this[_decimalFormat$];
    }
    set [_decimalFormat](value) {
      super[_decimalFormat] = value;
    }
    datePickerYear(yearIndex) {
      return this[_fullYearFormat].format(new core.DateTime.utc(yearIndex));
    }
    datePickerMonth(monthIndex) {
      return this[_fullYearFormat].dateSymbols.MONTHS[$_get](dart.notNull(monthIndex) - 1);
    }
    datePickerDayOfMonth(dayIndex) {
      return this[_dayFormat].format(new core.DateTime.utc(0, 0, dayIndex));
    }
    datePickerMediumDate(date) {
      return this[_mediumDateFormat].format(date);
    }
    datePickerHour(hour) {
      return this[_singleDigitHourFormat].format(new core.DateTime.utc(0, 0, 0, hour));
    }
    datePickerMinute(minute) {
      return this[_doubleDigitMinuteFormat].format(new core.DateTime.utc(0, 0, 0, 0, minute));
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return null;
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    datePickerHourSemanticsLabel(hour) {
      return intl.Intl.pluralLogic(StringL(), hour, {zero: this.datePickerHourSemanticsLabelZero, one: this.datePickerHourSemanticsLabelOne, two: this.datePickerHourSemanticsLabelTwo, few: this.datePickerHourSemanticsLabelFew, many: this.datePickerHourSemanticsLabelMany, other: this.datePickerHourSemanticsLabelOther, locale: this[_localeName]})[$replaceFirst]("$hour", this[_decimalFormat].format(hour));
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return null;
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    datePickerMinuteSemanticsLabel(minute) {
      return intl.Intl.pluralLogic(StringL(), minute, {zero: this.datePickerMinuteSemanticsLabelZero, one: this.datePickerMinuteSemanticsLabelOne, two: this.datePickerMinuteSemanticsLabelTwo, few: this.datePickerMinuteSemanticsLabelFew, many: this.datePickerMinuteSemanticsLabelMany, other: this.datePickerMinuteSemanticsLabelOther, locale: this[_localeName]})[$replaceFirst]("$minute", this[_decimalFormat].format(minute));
    }
    get datePickerDateOrder() {
      switch (this.datePickerDateOrderString) {
        case "dmy":
        {
          return localizations.DatePickerDateOrder.dmy;
        }
        case "mdy":
        {
          return localizations.DatePickerDateOrder.mdy;
        }
        case "ymd":
        {
          return localizations.DatePickerDateOrder.ymd;
        }
        case "ydm":
        {
          return localizations.DatePickerDateOrder.ydm;
        }
        default:
        {
          if (!false) dart.assertFailed("Failed to load DatePickerDateOrder " + dart.str(this.datePickerDateOrderString) + " for " + "locale " + dart.str(this[_localeName]) + ".\nNon conforming string for " + dart.str(this[_localeName]) + "'s " + ".arb file", L0, 208, 11, "false");
          return null;
        }
      }
    }
    get datePickerDateTimeOrder() {
      switch (this.datePickerDateTimeOrderString) {
        case "date_time_dayPeriod":
        {
          return localizations.DatePickerDateTimeOrder.date_time_dayPeriod;
        }
        case "date_dayPeriod_time":
        {
          return localizations.DatePickerDateTimeOrder.date_dayPeriod_time;
        }
        case "time_dayPeriod_date":
        {
          return localizations.DatePickerDateTimeOrder.time_dayPeriod_date;
        }
        case "dayPeriod_time_date":
        {
          return localizations.DatePickerDateTimeOrder.dayPeriod_time_date;
        }
        default:
        {
          if (!false) dart.assertFailed("Failed to load DatePickerDateTimeOrder " + dart.str(this.datePickerDateTimeOrderString) + " " + "for locale " + dart.str(this[_localeName]) + ".\nNon conforming string for " + dart.str(this[_localeName]) + "'s " + ".arb file", L0, 242, 11, "false");
          return null;
        }
      }
    }
    tabSemanticsLabel(opts) {
      let tabIndex = opts && 'tabIndex' in opts ? opts.tabIndex : null;
      let tabCount = opts && 'tabCount' in opts ? opts.tabCount : null;
      if (!(dart.notNull(tabIndex) >= 1)) dart.assertFailed(null, L0, 258, 12, "tabIndex >= 1");
      if (!(dart.notNull(tabCount) >= 1)) dart.assertFailed(null, L0, 259, 12, "tabCount >= 1");
      let template = this.tabSemanticsLabelRaw;
      return template[$replaceFirst]("$tabIndex", this[_decimalFormat].format(tabIndex))[$replaceFirst]("$tabCount", this[_decimalFormat].format(tabCount));
    }
    timerPickerHour(hour) {
      return this[_singleDigitHourFormat].format(new core.DateTime.utc(0, 0, 0, hour));
    }
    timerPickerMinute(minute) {
      return this[_singleDigitMinuteFormat].format(new core.DateTime.utc(0, 0, 0, 0, minute));
    }
    timerPickerSecond(second) {
      return this[_singleDigitSecondFormat].format(new core.DateTime.utc(0, 0, 0, 0, 0, second));
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return null;
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    timerPickerHourLabel(hour) {
      return intl.Intl.pluralLogic(StringL(), hour, {zero: this.timerPickerHourLabelZero, one: this.timerPickerHourLabelOne, two: this.timerPickerHourLabelTwo, few: this.timerPickerHourLabelFew, many: this.timerPickerHourLabelMany, other: this.timerPickerHourLabelOther, locale: this[_localeName]})[$replaceFirst]("$hour", this[_decimalFormat].format(hour));
    }
    get timerPickerHourLabels() {
      return JSArrayOfStringL().of([this.timerPickerHourLabelZero, this.timerPickerHourLabelOne, this.timerPickerHourLabelTwo, this.timerPickerHourLabelFew, this.timerPickerHourLabelMany, this.timerPickerHourLabelOther]);
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return null;
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    timerPickerMinuteLabel(minute) {
      return intl.Intl.pluralLogic(StringL(), minute, {zero: this.timerPickerMinuteLabelZero, one: this.timerPickerMinuteLabelOne, two: this.timerPickerMinuteLabelTwo, few: this.timerPickerMinuteLabelFew, many: this.timerPickerMinuteLabelMany, other: this.timerPickerMinuteLabelOther, locale: this[_localeName]})[$replaceFirst]("$minute", this[_decimalFormat].format(minute));
    }
    get timerPickerMinuteLabels() {
      return JSArrayOfStringL().of([this.timerPickerMinuteLabelZero, this.timerPickerMinuteLabelOne, this.timerPickerMinuteLabelTwo, this.timerPickerMinuteLabelFew, this.timerPickerMinuteLabelMany, this.timerPickerMinuteLabelOther]);
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return null;
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    timerPickerSecondLabel(second) {
      return intl.Intl.pluralLogic(StringL(), second, {zero: this.timerPickerSecondLabelZero, one: this.timerPickerSecondLabelOne, two: this.timerPickerSecondLabelTwo, few: this.timerPickerSecondLabelFew, many: this.timerPickerSecondLabelMany, other: this.timerPickerSecondLabelOther, locale: this[_localeName]})[$replaceFirst]("$second", this[_decimalFormat].format(second));
    }
    get timerPickerSecondLabels() {
      return JSArrayOfStringL().of([this.timerPickerSecondLabelZero, this.timerPickerSecondLabelOne, this.timerPickerSecondLabelTwo, this.timerPickerSecondLabelFew, this.timerPickerSecondLabelMany, this.timerPickerSecondLabelOther]);
    }
  };
  (cupertino_localizations.GlobalCupertinoLocalizations.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : null;
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    if (!(localeName != null)) dart.assertFailed(null, L0, 66, 15, "localeName != null");
    this[_localeName$] = localeName;
    if (!(fullYearFormat != null)) dart.assertFailed(null, L0, 68, 15, "fullYearFormat != null");
    this[_fullYearFormat$] = fullYearFormat;
    if (!(dayFormat != null)) dart.assertFailed(null, L0, 70, 15, "dayFormat != null");
    this[_dayFormat$] = dayFormat;
    if (!(mediumDateFormat != null)) dart.assertFailed(null, L0, 72, 15, "mediumDateFormat != null");
    this[_mediumDateFormat$] = mediumDateFormat;
    if (!(singleDigitHourFormat != null)) dart.assertFailed(null, L0, 74, 15, "singleDigitHourFormat != null");
    this[_singleDigitHourFormat$] = singleDigitHourFormat;
    if (!(singleDigitMinuteFormat != null)) dart.assertFailed(null, L0, 76, 15, "singleDigitMinuteFormat != null");
    this[_singleDigitMinuteFormat$] = singleDigitMinuteFormat;
    if (!(doubleDigitMinuteFormat != null)) dart.assertFailed(null, L0, 78, 15, "doubleDigitMinuteFormat != null");
    this[_doubleDigitMinuteFormat$] = doubleDigitMinuteFormat;
    if (!(singleDigitSecondFormat != null)) dart.assertFailed(null, L0, 80, 15, "singleDigitSecondFormat != null");
    this[_singleDigitSecondFormat$] = singleDigitSecondFormat;
    if (!(decimalFormat != null)) dart.assertFailed(null, L0, 82, 15, "decimalFormat != null");
    this[_decimalFormat$] = decimalFormat;
    ;
  }).prototype = cupertino_localizations.GlobalCupertinoLocalizations.prototype;
  dart.addTypeTests(cupertino_localizations.GlobalCupertinoLocalizations);
  dart.addTypeCaches(cupertino_localizations.GlobalCupertinoLocalizations);
  cupertino_localizations.GlobalCupertinoLocalizations[dart.implements] = () => [localizations.CupertinoLocalizations];
  dart.setMethodSignature(cupertino_localizations.GlobalCupertinoLocalizations, () => ({
    __proto__: dart.getMethods(cupertino_localizations.GlobalCupertinoLocalizations.__proto__),
    datePickerYear: dart.fnType(dart.legacy(core.String), [dart.legacy(core.int)]),
    datePickerMonth: dart.fnType(dart.legacy(core.String), [dart.legacy(core.int)]),
    datePickerDayOfMonth: dart.fnType(dart.legacy(core.String), [dart.legacy(core.int)]),
    datePickerMediumDate: dart.fnType(dart.legacy(core.String), [dart.legacy(core.DateTime)]),
    datePickerHour: dart.fnType(dart.legacy(core.String), [dart.legacy(core.int)]),
    datePickerMinute: dart.fnType(dart.legacy(core.String), [dart.legacy(core.int)]),
    datePickerHourSemanticsLabel: dart.fnType(dart.legacy(core.String), [dart.legacy(core.int)]),
    datePickerMinuteSemanticsLabel: dart.fnType(dart.legacy(core.String), [dart.legacy(core.int)]),
    tabSemanticsLabel: dart.fnType(dart.legacy(core.String), [], {tabCount: dart.legacy(core.int), tabIndex: dart.legacy(core.int)}, {}),
    timerPickerHour: dart.fnType(dart.legacy(core.String), [dart.legacy(core.int)]),
    timerPickerMinute: dart.fnType(dart.legacy(core.String), [dart.legacy(core.int)]),
    timerPickerSecond: dart.fnType(dart.legacy(core.String), [dart.legacy(core.int)]),
    timerPickerHourLabel: dart.fnType(dart.legacy(core.String), [dart.legacy(core.int)]),
    timerPickerMinuteLabel: dart.fnType(dart.legacy(core.String), [dart.legacy(core.int)]),
    timerPickerSecondLabel: dart.fnType(dart.legacy(core.String), [dart.legacy(core.int)])
  }));
  dart.setGetterSignature(cupertino_localizations.GlobalCupertinoLocalizations, () => ({
    __proto__: dart.getGetters(cupertino_localizations.GlobalCupertinoLocalizations.__proto__),
    datePickerHourSemanticsLabelZero: dart.legacy(core.String),
    datePickerHourSemanticsLabelOne: dart.legacy(core.String),
    datePickerHourSemanticsLabelTwo: dart.legacy(core.String),
    datePickerHourSemanticsLabelFew: dart.legacy(core.String),
    datePickerHourSemanticsLabelMany: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelZero: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOne: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelTwo: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelFew: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelMany: dart.legacy(core.String),
    datePickerDateOrder: dart.legacy(localizations.DatePickerDateOrder),
    datePickerDateTimeOrder: dart.legacy(localizations.DatePickerDateTimeOrder),
    timerPickerHourLabelZero: dart.legacy(core.String),
    timerPickerHourLabelOne: dart.legacy(core.String),
    timerPickerHourLabelTwo: dart.legacy(core.String),
    timerPickerHourLabelFew: dart.legacy(core.String),
    timerPickerHourLabelMany: dart.legacy(core.String),
    timerPickerHourLabels: dart.legacy(core.List$(dart.legacy(core.String))),
    timerPickerMinuteLabelZero: dart.legacy(core.String),
    timerPickerMinuteLabelOne: dart.legacy(core.String),
    timerPickerMinuteLabelTwo: dart.legacy(core.String),
    timerPickerMinuteLabelFew: dart.legacy(core.String),
    timerPickerMinuteLabelMany: dart.legacy(core.String),
    timerPickerMinuteLabels: dart.legacy(core.List$(dart.legacy(core.String))),
    timerPickerSecondLabelZero: dart.legacy(core.String),
    timerPickerSecondLabelOne: dart.legacy(core.String),
    timerPickerSecondLabelTwo: dart.legacy(core.String),
    timerPickerSecondLabelFew: dart.legacy(core.String),
    timerPickerSecondLabelMany: dart.legacy(core.String),
    timerPickerSecondLabels: dart.legacy(core.List$(dart.legacy(core.String)))
  }));
  dart.setLibraryUri(cupertino_localizations.GlobalCupertinoLocalizations, L1);
  dart.setFieldSignature(cupertino_localizations.GlobalCupertinoLocalizations, () => ({
    __proto__: dart.getFields(cupertino_localizations.GlobalCupertinoLocalizations.__proto__),
    [_localeName]: dart.finalFieldType(dart.legacy(core.String)),
    [_fullYearFormat]: dart.finalFieldType(dart.legacy(intl.DateFormat)),
    [_dayFormat]: dart.finalFieldType(dart.legacy(intl.DateFormat)),
    [_mediumDateFormat]: dart.finalFieldType(dart.legacy(intl.DateFormat)),
    [_singleDigitHourFormat]: dart.finalFieldType(dart.legacy(intl.DateFormat)),
    [_singleDigitMinuteFormat]: dart.finalFieldType(dart.legacy(intl.DateFormat)),
    [_doubleDigitMinuteFormat]: dart.finalFieldType(dart.legacy(intl.DateFormat)),
    [_singleDigitSecondFormat]: dart.finalFieldType(dart.legacy(intl.DateFormat)),
    [_decimalFormat]: dart.finalFieldType(dart.legacy(intl.NumberFormat))
  }));
  dart.defineLazy(cupertino_localizations.GlobalCupertinoLocalizations, {
    /*cupertino_localizations.GlobalCupertinoLocalizations.delegate*/get delegate() {
      return C0 || CT.C0;
    },
    /*cupertino_localizations.GlobalCupertinoLocalizations.delegates*/get delegates() {
      return C1 || CT.C1;
    }
  }, true);
  generated_cupertino_localizations.CupertinoLocalizationAf = class CupertinoLocalizationAf extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Opletberig";
    }
    get anteMeridiemAbbreviation() {
      return "vm.";
    }
    get copyButtonLabel() {
      return "Kopieer";
    }
    get cutButtonLabel() {
      return "Knip";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour uur";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour uur";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minuut";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minute";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Maak toe";
    }
    get pasteButtonLabel() {
      return "Plak";
    }
    get postMeridiemAbbreviation() {
      return "nm.";
    }
    get selectAllButtonLabel() {
      return "Kies alles";
    }
    get tabSemanticsLabelRaw() {
      return "Oortjie $tabIndex van $tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "uur";
    }
    get timerPickerHourLabelOther() {
      return "uur";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min.";
    }
    get timerPickerMinuteLabelOther() {
      return "min.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "sek.";
    }
    get timerPickerSecondLabelOther() {
      return "sek.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Vandag";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationAf.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "af";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationAf.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationAf.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationAf);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationAf);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationAf, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationAf.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationAf, L2);
  generated_cupertino_localizations.CupertinoLocalizationAm = class CupertinoLocalizationAm extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "ማንቂያ";
    }
    get anteMeridiemAbbreviation() {
      return "ጥዋት";
    }
    get copyButtonLabel() {
      return "ቅዳ";
    }
    get cutButtonLabel() {
      return "ቁረጥ";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour ሰዓት";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour ሰዓት";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 ደቂቃ";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute ደቂቃዎች";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "አሰናብት";
    }
    get pasteButtonLabel() {
      return "ለጥፍ";
    }
    get postMeridiemAbbreviation() {
      return "ከሰዓት";
    }
    get selectAllButtonLabel() {
      return "ሁሉንም ምረጥ";
    }
    get tabSemanticsLabelRaw() {
      return "ትር $tabIndex ከ$tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "ሰዓት";
    }
    get timerPickerHourLabelOther() {
      return "ሰዓቶች";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "ደቂቃ";
    }
    get timerPickerMinuteLabelOther() {
      return "ደቂቃ";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "ሴኮ";
    }
    get timerPickerSecondLabelOther() {
      return "ሴኮ";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "ዛሬ";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationAm.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "am";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationAm.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationAm.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationAm);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationAm);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationAm, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationAm.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationAm, L2);
  generated_cupertino_localizations.CupertinoLocalizationAr = class CupertinoLocalizationAr extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "تنبيه";
    }
    get anteMeridiemAbbreviation() {
      return "ص";
    }
    get copyButtonLabel() {
      return "نسخ";
    }
    get cutButtonLabel() {
      return "قص";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return "$hour بالضبط";
    }
    get datePickerHourSemanticsLabelMany() {
      return "$hour بالضبط";
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour بالضبط";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour بالضبط";
    }
    get datePickerHourSemanticsLabelTwo() {
      return "$hour بالضبط";
    }
    get datePickerHourSemanticsLabelZero() {
      return "$hour بالضبط";
    }
    get datePickerMinuteSemanticsLabelFew() {
      return "$minute دقائق";
    }
    get datePickerMinuteSemanticsLabelMany() {
      return "$minute دقيقة​";
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "دقيقة واحدة";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute دقيقة​";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return "دقيقتان ($minute)";
    }
    get datePickerMinuteSemanticsLabelZero() {
      return "$minute دقيقة​";
    }
    get modalBarrierDismissLabel() {
      return "رفض";
    }
    get pasteButtonLabel() {
      return "لصق";
    }
    get postMeridiemAbbreviation() {
      return "م";
    }
    get selectAllButtonLabel() {
      return "اختيار الكل";
    }
    get tabSemanticsLabelRaw() {
      return "علامة التبويب $tabIndex من $tabCount";
    }
    get timerPickerHourLabelFew() {
      return "ساعات";
    }
    get timerPickerHourLabelMany() {
      return "ساعة";
    }
    get timerPickerHourLabelOne() {
      return "ساعة";
    }
    get timerPickerHourLabelOther() {
      return "ساعة";
    }
    get timerPickerHourLabelTwo() {
      return "ساعتان";
    }
    get timerPickerHourLabelZero() {
      return "ساعة";
    }
    get timerPickerMinuteLabelFew() {
      return "دقائق";
    }
    get timerPickerMinuteLabelMany() {
      return "دقيقة";
    }
    get timerPickerMinuteLabelOne() {
      return "دقيقة واحدة";
    }
    get timerPickerMinuteLabelOther() {
      return "دقيقة";
    }
    get timerPickerMinuteLabelTwo() {
      return "دقيقتان";
    }
    get timerPickerMinuteLabelZero() {
      return "دقيقة";
    }
    get timerPickerSecondLabelFew() {
      return "ثوانٍ";
    }
    get timerPickerSecondLabelMany() {
      return "ثانية";
    }
    get timerPickerSecondLabelOne() {
      return "ثانية واحدة";
    }
    get timerPickerSecondLabelOther() {
      return "ثانية";
    }
    get timerPickerSecondLabelTwo() {
      return "ثانيتان";
    }
    get timerPickerSecondLabelZero() {
      return "ثانية";
    }
    get todayLabel() {
      return "اليوم";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationAr.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ar";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationAr.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationAr.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationAr);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationAr);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationAr, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationAr.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationAr, L2);
  generated_cupertino_localizations.CupertinoLocalizationAs = class CupertinoLocalizationAs extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "সতৰ্কবাৰ্তা";
    }
    get anteMeridiemAbbreviation() {
      return "পূৰ্বাহ্ন";
    }
    get copyButtonLabel() {
      return "প্ৰতিলিপি কৰক";
    }
    get cutButtonLabel() {
      return "কাট কৰক";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour বাজিছে";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour বাজিছে";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "১মিনিট";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minuteমিনিট";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "অগ্ৰাহ্য কৰক";
    }
    get pasteButtonLabel() {
      return "পে'ষ্ট কৰক";
    }
    get postMeridiemAbbreviation() {
      return "অপৰাহ্ন";
    }
    get selectAllButtonLabel() {
      return "সকলো বাছনি কৰক";
    }
    get tabSemanticsLabelRaw() {
      return "$tabCount টা টেবৰ $tabIndex নম্বৰটো";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "ঘণ্টা";
    }
    get timerPickerHourLabelOther() {
      return "ঘণ্টা";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "মিনিট।";
    }
    get timerPickerMinuteLabelOther() {
      return "মিনিট।";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "ছেকেণ্ড।";
    }
    get timerPickerSecondLabelOther() {
      return "ছেকেণ্ড।";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "আজি";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationAs.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "as";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationAs.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationAs.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationAs);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationAs);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationAs, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationAs.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationAs, L2);
  generated_cupertino_localizations.CupertinoLocalizationAz = class CupertinoLocalizationAz extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Bildiriş";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Kopyalayın";
    }
    get cutButtonLabel() {
      return "Kəsin";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "Saat $hour";
    }
    get datePickerHourSemanticsLabelOther() {
      return "Saat $hour";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 dəqiqə";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute dəqiqə";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "İmtina edin";
    }
    get pasteButtonLabel() {
      return "Yerləşdirin";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Hamısını seçin";
    }
    get tabSemanticsLabelRaw() {
      return "Tab $tabIndex/$tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "saat";
    }
    get timerPickerHourLabelOther() {
      return "saat";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "dəq.";
    }
    get timerPickerMinuteLabelOther() {
      return "dəq.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "san.";
    }
    get timerPickerSecondLabelOther() {
      return "san.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Bu gün";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationAz.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "az";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationAz.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationAz.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationAz);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationAz);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationAz, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationAz.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationAz, L2);
  generated_cupertino_localizations.CupertinoLocalizationBe = class CupertinoLocalizationBe extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Абвестка";
    }
    get anteMeridiemAbbreviation() {
      return "раніцы";
    }
    get copyButtonLabel() {
      return "Капіраваць";
    }
    get cutButtonLabel() {
      return "Выразаць";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return "$hour гадзіны нуль хвілін";
    }
    get datePickerHourSemanticsLabelMany() {
      return "$hour гадзін нуль хвілін";
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour гадзіна нуль хвілін";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour гадзіны нуль хвілін";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return "$minute хвіліны";
    }
    get datePickerMinuteSemanticsLabelMany() {
      return "$minute хвілін";
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 хвіліна";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute хвіліны";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Адхіліць";
    }
    get pasteButtonLabel() {
      return "Уставіць";
    }
    get postMeridiemAbbreviation() {
      return "вечара";
    }
    get selectAllButtonLabel() {
      return "Выбраць усе";
    }
    get tabSemanticsLabelRaw() {
      return "Укладка $tabIndex з $tabCount";
    }
    get timerPickerHourLabelFew() {
      return "гадзіны";
    }
    get timerPickerHourLabelMany() {
      return "гадзін";
    }
    get timerPickerHourLabelOne() {
      return "гадзіна";
    }
    get timerPickerHourLabelOther() {
      return "гадзіны";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return "хв";
    }
    get timerPickerMinuteLabelMany() {
      return "хв";
    }
    get timerPickerMinuteLabelOne() {
      return "хв";
    }
    get timerPickerMinuteLabelOther() {
      return "хв";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return "с";
    }
    get timerPickerSecondLabelMany() {
      return "с";
    }
    get timerPickerSecondLabelOne() {
      return "с";
    }
    get timerPickerSecondLabelOther() {
      return "с";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Сёння";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationBe.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "be";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationBe.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationBe.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationBe);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationBe);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationBe, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationBe.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationBe, L2);
  generated_cupertino_localizations.CupertinoLocalizationBg = class CupertinoLocalizationBg extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Сигнал";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Копиране";
    }
    get cutButtonLabel() {
      return "Изрязване";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour часа";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour часа";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 минута";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute минути";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Отхвърляне";
    }
    get pasteButtonLabel() {
      return "Поставяне";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Избиране на всички";
    }
    get tabSemanticsLabelRaw() {
      return "Раздел $tabIndex от $tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "час";
    }
    get timerPickerHourLabelOther() {
      return "часа";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "мин";
    }
    get timerPickerMinuteLabelOther() {
      return "мин";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "сек";
    }
    get timerPickerSecondLabelOther() {
      return "сек";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Днес";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationBg.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "bg";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationBg.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationBg.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationBg);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationBg);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationBg, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationBg.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationBg, L2);
  generated_cupertino_localizations.CupertinoLocalizationBn = class CupertinoLocalizationBn extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "সতর্কতা";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "কপি করুন";
    }
    get cutButtonLabel() {
      return "কাট করুন";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hourটা বাজে";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hourটা বাজে";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "১ মিনিট";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute মিনিট";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "খারিজ করুন";
    }
    get pasteButtonLabel() {
      return "পেস্ট করুন";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "সব বেছে নিন";
    }
    get tabSemanticsLabelRaw() {
      return "$tabCount-এর মধ্যে $tabIndex নম্বর ট্যাব";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "ঘণ্টা";
    }
    get timerPickerHourLabelOther() {
      return "ঘণ্টা";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "মিনিট।";
    }
    get timerPickerMinuteLabelOther() {
      return "মিনিট।";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "সেকেন্ড।";
    }
    get timerPickerSecondLabelOther() {
      return "সেকেন্ড।";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "আজ";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationBn.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "bn";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationBn.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationBn.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationBn);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationBn);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationBn, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationBn.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationBn, L2);
  generated_cupertino_localizations.CupertinoLocalizationBs = class CupertinoLocalizationBs extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Upozorenje";
    }
    get anteMeridiemAbbreviation() {
      return "prijepodne";
    }
    get copyButtonLabel() {
      return "Kopiraj";
    }
    get cutButtonLabel() {
      return "Izreži";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return "$hour sata";
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour sat";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour sati";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return "$minute minute";
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minuta";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minuta";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Odbaci";
    }
    get pasteButtonLabel() {
      return "Zalijepi";
    }
    get postMeridiemAbbreviation() {
      return "poslijepodne";
    }
    get selectAllButtonLabel() {
      return "Odaberi sve";
    }
    get tabSemanticsLabelRaw() {
      return "Kartica $tabIndex od $tabCount";
    }
    get timerPickerHourLabelFew() {
      return "sata";
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "sat";
    }
    get timerPickerHourLabelOther() {
      return "sati";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return "min.";
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min.";
    }
    get timerPickerMinuteLabelOther() {
      return "min.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return "sec.";
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "sec.";
    }
    get timerPickerSecondLabelOther() {
      return "sec.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Danas";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationBs.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "bs";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationBs.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationBs.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationBs);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationBs);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationBs, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationBs.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationBs, L2);
  generated_cupertino_localizations.CupertinoLocalizationCa = class CupertinoLocalizationCa extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Alerta";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Copia";
    }
    get cutButtonLabel() {
      return "Retalla";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punt";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punt";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minut";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minuts";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Ignora";
    }
    get pasteButtonLabel() {
      return "Enganxa";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Selecciona-ho tot";
    }
    get tabSemanticsLabelRaw() {
      return "Pestanya $tabIndex de $tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "hora";
    }
    get timerPickerHourLabelOther() {
      return "hores";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min";
    }
    get timerPickerMinuteLabelOther() {
      return "min";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "s";
    }
    get timerPickerSecondLabelOther() {
      return "s";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Avui";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationCa.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ca";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationCa.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationCa.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationCa);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationCa);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationCa, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationCa.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationCa, L2);
  generated_cupertino_localizations.CupertinoLocalizationCs = class CupertinoLocalizationCs extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Upozornění";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Kopírovat";
    }
    get cutButtonLabel() {
      return "Vyjmout";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return "$hour hodiny";
    }
    get datePickerHourSemanticsLabelMany() {
      return "$hour hodiny";
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour hodina";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour hodin";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return "$minute minuty";
    }
    get datePickerMinuteSemanticsLabelMany() {
      return "$minute minuty";
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minuta";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minut";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Zavřít";
    }
    get pasteButtonLabel() {
      return "Vložit";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Vybrat vše";
    }
    get tabSemanticsLabelRaw() {
      return "Karta $tabIndex z $tabCount";
    }
    get timerPickerHourLabelFew() {
      return "hodiny";
    }
    get timerPickerHourLabelMany() {
      return "hodiny";
    }
    get timerPickerHourLabelOne() {
      return "hodina";
    }
    get timerPickerHourLabelOther() {
      return "hodin";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return "min";
    }
    get timerPickerMinuteLabelMany() {
      return "min";
    }
    get timerPickerMinuteLabelOne() {
      return "min";
    }
    get timerPickerMinuteLabelOther() {
      return "min";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return "s";
    }
    get timerPickerSecondLabelMany() {
      return "s";
    }
    get timerPickerSecondLabelOne() {
      return "s";
    }
    get timerPickerSecondLabelOther() {
      return "s";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Dnes";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationCs.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "cs";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationCs.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationCs.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationCs);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationCs);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationCs, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationCs.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationCs, L2);
  generated_cupertino_localizations.CupertinoLocalizationDa = class CupertinoLocalizationDa extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Underretning";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Kopiér";
    }
    get cutButtonLabel() {
      return "Klip";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "klokken $hour";
    }
    get datePickerHourSemanticsLabelOther() {
      return "klokken $hour";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minut";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minutter";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Afvis";
    }
    get pasteButtonLabel() {
      return "Sæt ind";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Vælg alle";
    }
    get tabSemanticsLabelRaw() {
      return "Fane $tabIndex af $tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "time";
    }
    get timerPickerHourLabelOther() {
      return "timer";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min.";
    }
    get timerPickerMinuteLabelOther() {
      return "min.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "sek.";
    }
    get timerPickerSecondLabelOther() {
      return "sek.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "I dag";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationDa.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "da";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationDa.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationDa.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationDa);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationDa);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationDa, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationDa.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationDa, L2);
  generated_cupertino_localizations.CupertinoLocalizationDe = class CupertinoLocalizationDe extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Benachrichtigung";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Kopieren";
    }
    get cutButtonLabel() {
      return "Ausschneiden";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour Uhr";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour Uhr";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 Minute";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute Minuten";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Schließen";
    }
    get pasteButtonLabel() {
      return "Einsetzen";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Alles auswählen";
    }
    get tabSemanticsLabelRaw() {
      return "Tab $tabIndex von $tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "Stunde";
    }
    get timerPickerHourLabelOther() {
      return "Stunden";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "Min.";
    }
    get timerPickerMinuteLabelOther() {
      return "Min.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "s";
    }
    get timerPickerSecondLabelOther() {
      return "s";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Heute";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationDe.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "de";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationDe.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationDe.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationDe);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationDe);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationDe, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationDe.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationDe, L2);
  generated_cupertino_localizations.CupertinoLocalizationDeCh = class CupertinoLocalizationDeCh extends generated_cupertino_localizations.CupertinoLocalizationDe {
    get modalBarrierDismissLabel() {
      return "Schliessen";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationDeCh.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "de_CH";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationDeCh.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationDeCh.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationDeCh);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationDeCh);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationDeCh, L2);
  generated_cupertino_localizations.CupertinoLocalizationEl = class CupertinoLocalizationEl extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Ειδοποίηση";
    }
    get anteMeridiemAbbreviation() {
      return "π.μ.";
    }
    get copyButtonLabel() {
      return "Αντιγραφή";
    }
    get cutButtonLabel() {
      return "Αποκοπή";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour ακριβώς";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour ακριβώς";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 λεπτό";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute λεπτά";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Παράβλεψη";
    }
    get pasteButtonLabel() {
      return "Επικόλληση";
    }
    get postMeridiemAbbreviation() {
      return "μ.μ.";
    }
    get selectAllButtonLabel() {
      return "Επιλογή όλων";
    }
    get tabSemanticsLabelRaw() {
      return "Καρτέλα $tabIndex από $tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "ώρα";
    }
    get timerPickerHourLabelOther() {
      return "ώρες";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "λεπ.";
    }
    get timerPickerMinuteLabelOther() {
      return "λεπ.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "δευτ.";
    }
    get timerPickerSecondLabelOther() {
      return "δευτ.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Σήμερα";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEl.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "el";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEl.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEl.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEl);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationEl);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationEl, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationEl.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEl, L2);
  generated_cupertino_localizations.CupertinoLocalizationEn = class CupertinoLocalizationEn extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Alert";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Copy";
    }
    get cutButtonLabel() {
      return "Cut";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour o'clock";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour o'clock";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minute";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minutes";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Dismiss";
    }
    get pasteButtonLabel() {
      return "Paste";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Select All";
    }
    get tabSemanticsLabelRaw() {
      return "Tab $tabIndex of $tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "hour";
    }
    get timerPickerHourLabelOther() {
      return "hours";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min.";
    }
    get timerPickerMinuteLabelOther() {
      return "min.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "sec.";
    }
    get timerPickerSecondLabelOther() {
      return "sec.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Today";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEn.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "en";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEn.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEn.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEn);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationEn);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationEn, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationEn.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEn, L2);
  generated_cupertino_localizations.CupertinoLocalizationEnAu = class CupertinoLocalizationEnAu extends generated_cupertino_localizations.CupertinoLocalizationEn {
    get datePickerDateOrderString() {
      return "dmy";
    }
    get selectAllButtonLabel() {
      return "Select all";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEnAu.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "en_AU";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEnAu.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEnAu.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEnAu);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationEnAu);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEnAu, L2);
  generated_cupertino_localizations.CupertinoLocalizationEnCa = class CupertinoLocalizationEnCa extends generated_cupertino_localizations.CupertinoLocalizationEn {
    get datePickerDateOrderString() {
      return "dmy";
    }
    get selectAllButtonLabel() {
      return "Select all";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEnCa.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "en_CA";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEnCa.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEnCa.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEnCa);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationEnCa);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEnCa, L2);
  generated_cupertino_localizations.CupertinoLocalizationEnGb = class CupertinoLocalizationEnGb extends generated_cupertino_localizations.CupertinoLocalizationEn {
    get datePickerDateOrderString() {
      return "dmy";
    }
    get selectAllButtonLabel() {
      return "Select all";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEnGb.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "en_GB";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEnGb.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEnGb.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEnGb);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationEnGb);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEnGb, L2);
  generated_cupertino_localizations.CupertinoLocalizationEnIe = class CupertinoLocalizationEnIe extends generated_cupertino_localizations.CupertinoLocalizationEn {
    get datePickerDateOrderString() {
      return "dmy";
    }
    get selectAllButtonLabel() {
      return "Select all";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEnIe.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "en_IE";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEnIe.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEnIe.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEnIe);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationEnIe);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEnIe, L2);
  generated_cupertino_localizations.CupertinoLocalizationEnIn = class CupertinoLocalizationEnIn extends generated_cupertino_localizations.CupertinoLocalizationEn {
    get datePickerDateOrderString() {
      return "dmy";
    }
    get selectAllButtonLabel() {
      return "Select all";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEnIn.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "en_IN";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEnIn.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEnIn.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEnIn);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationEnIn);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEnIn, L2);
  generated_cupertino_localizations.CupertinoLocalizationEnNz = class CupertinoLocalizationEnNz extends generated_cupertino_localizations.CupertinoLocalizationEn {
    get datePickerDateOrderString() {
      return "dmy";
    }
    get selectAllButtonLabel() {
      return "Select all";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEnNz.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "en_NZ";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEnNz.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEnNz.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEnNz);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationEnNz);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEnNz, L2);
  generated_cupertino_localizations.CupertinoLocalizationEnSg = class CupertinoLocalizationEnSg extends generated_cupertino_localizations.CupertinoLocalizationEn {
    get datePickerDateOrderString() {
      return "dmy";
    }
    get selectAllButtonLabel() {
      return "Select all";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEnSg.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "en_SG";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEnSg.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEnSg.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEnSg);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationEnSg);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEnSg, L2);
  generated_cupertino_localizations.CupertinoLocalizationEnZa = class CupertinoLocalizationEnZa extends generated_cupertino_localizations.CupertinoLocalizationEn {
    get datePickerDateOrderString() {
      return "dmy";
    }
    get selectAllButtonLabel() {
      return "Select all";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEnZa.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "en_ZA";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEnZa.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEnZa.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEnZa);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationEnZa);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEnZa, L2);
  generated_cupertino_localizations.CupertinoLocalizationEs = class CupertinoLocalizationEs extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Alerta";
    }
    get anteMeridiemAbbreviation() {
      return "a. m.";
    }
    get copyButtonLabel() {
      return "Copiar";
    }
    get cutButtonLabel() {
      return "Cortar";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minuto";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minutos";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Cerrar";
    }
    get pasteButtonLabel() {
      return "Pegar";
    }
    get postMeridiemAbbreviation() {
      return "p. m.";
    }
    get selectAllButtonLabel() {
      return "Seleccionar todos";
    }
    get tabSemanticsLabelRaw() {
      return "Pestaña $tabIndex de $tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "hora";
    }
    get timerPickerHourLabelOther() {
      return "horas";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min";
    }
    get timerPickerMinuteLabelOther() {
      return "min";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "s";
    }
    get timerPickerSecondLabelOther() {
      return "s";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Hoy";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEs.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEs.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEs.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEs);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationEs);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationEs, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationEs.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEs, L2);
  generated_cupertino_localizations.CupertinoLocalizationEs419 = class CupertinoLocalizationEs419 extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEs419.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_419";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEs419.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEs419.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEs419);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationEs419);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEs419, L2);
  generated_cupertino_localizations.CupertinoLocalizationEsAr = class CupertinoLocalizationEsAr extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEsAr.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_AR";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEsAr.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEsAr.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEsAr);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationEsAr);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEsAr, L2);
  generated_cupertino_localizations.CupertinoLocalizationEsBo = class CupertinoLocalizationEsBo extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEsBo.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_BO";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEsBo.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEsBo.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEsBo);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationEsBo);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEsBo, L2);
  generated_cupertino_localizations.CupertinoLocalizationEsCl = class CupertinoLocalizationEsCl extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEsCl.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_CL";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEsCl.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEsCl.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEsCl);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationEsCl);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEsCl, L2);
  generated_cupertino_localizations.CupertinoLocalizationEsCo = class CupertinoLocalizationEsCo extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEsCo.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_CO";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEsCo.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEsCo.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEsCo);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationEsCo);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEsCo, L2);
  generated_cupertino_localizations.CupertinoLocalizationEsCr = class CupertinoLocalizationEsCr extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEsCr.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_CR";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEsCr.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEsCr.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEsCr);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationEsCr);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEsCr, L2);
  generated_cupertino_localizations.CupertinoLocalizationEsDo = class CupertinoLocalizationEsDo extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEsDo.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_DO";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEsDo.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEsDo.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEsDo);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationEsDo);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEsDo, L2);
  generated_cupertino_localizations.CupertinoLocalizationEsEc = class CupertinoLocalizationEsEc extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEsEc.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_EC";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEsEc.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEsEc.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEsEc);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationEsEc);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEsEc, L2);
  generated_cupertino_localizations.CupertinoLocalizationEsGt = class CupertinoLocalizationEsGt extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEsGt.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_GT";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEsGt.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEsGt.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEsGt);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationEsGt);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEsGt, L2);
  generated_cupertino_localizations.CupertinoLocalizationEsHn = class CupertinoLocalizationEsHn extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEsHn.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_HN";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEsHn.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEsHn.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEsHn);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationEsHn);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEsHn, L2);
  generated_cupertino_localizations.CupertinoLocalizationEsMx = class CupertinoLocalizationEsMx extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEsMx.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_MX";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEsMx.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEsMx.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEsMx);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationEsMx);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEsMx, L2);
  generated_cupertino_localizations.CupertinoLocalizationEsNi = class CupertinoLocalizationEsNi extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEsNi.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_NI";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEsNi.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEsNi.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEsNi);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationEsNi);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEsNi, L2);
  generated_cupertino_localizations.CupertinoLocalizationEsPa = class CupertinoLocalizationEsPa extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEsPa.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_PA";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEsPa.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEsPa.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEsPa);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationEsPa);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEsPa, L2);
  generated_cupertino_localizations.CupertinoLocalizationEsPe = class CupertinoLocalizationEsPe extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEsPe.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_PE";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEsPe.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEsPe.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEsPe);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationEsPe);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEsPe, L2);
  generated_cupertino_localizations.CupertinoLocalizationEsPr = class CupertinoLocalizationEsPr extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEsPr.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_PR";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEsPr.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEsPr.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEsPr);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationEsPr);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEsPr, L2);
  generated_cupertino_localizations.CupertinoLocalizationEsPy = class CupertinoLocalizationEsPy extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEsPy.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_PY";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEsPy.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEsPy.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEsPy);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationEsPy);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEsPy, L2);
  generated_cupertino_localizations.CupertinoLocalizationEsSv = class CupertinoLocalizationEsSv extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEsSv.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_SV";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEsSv.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEsSv.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEsSv);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationEsSv);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEsSv, L2);
  generated_cupertino_localizations.CupertinoLocalizationEsUs = class CupertinoLocalizationEsUs extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEsUs.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_US";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEsUs.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEsUs.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEsUs);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationEsUs);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEsUs, L2);
  generated_cupertino_localizations.CupertinoLocalizationEsUy = class CupertinoLocalizationEsUy extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEsUy.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_UY";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEsUy.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEsUy.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEsUy);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationEsUy);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEsUy, L2);
  generated_cupertino_localizations.CupertinoLocalizationEsVe = class CupertinoLocalizationEsVe extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEsVe.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_VE";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEsVe.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEsVe.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEsVe);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationEsVe);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEsVe, L2);
  generated_cupertino_localizations.CupertinoLocalizationEt = class CupertinoLocalizationEt extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Märguanne";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Kopeeri";
    }
    get cutButtonLabel() {
      return "Lõika";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "Kell $hour";
    }
    get datePickerHourSemanticsLabelOther() {
      return "Kell $hour";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minut";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minutit";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Loobu";
    }
    get pasteButtonLabel() {
      return "Kleebi";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Vali kõik";
    }
    get tabSemanticsLabelRaw() {
      return "$tabIndex. vaheleht $tabCount-st";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "tund";
    }
    get timerPickerHourLabelOther() {
      return "tundi";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min";
    }
    get timerPickerMinuteLabelOther() {
      return "min";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "s";
    }
    get timerPickerSecondLabelOther() {
      return "s";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Täna";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEt.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "et";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEt.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEt.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEt);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationEt);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationEt, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationEt.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEt, L2);
  generated_cupertino_localizations.CupertinoLocalizationEu = class CupertinoLocalizationEu extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Alerta";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Kopiatu";
    }
    get cutButtonLabel() {
      return "Ebaki";
    }
    get datePickerDateOrderString() {
      return "ymd";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "Ordu$houra da";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hourak dira";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "Minutu bat";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minutu";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Baztertu";
    }
    get pasteButtonLabel() {
      return "Itsatsi";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Hautatu guztiak";
    }
    get tabSemanticsLabelRaw() {
      return "$tabIndex/$tabCount fitxa";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "ordu";
    }
    get timerPickerHourLabelOther() {
      return "ordu";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min.";
    }
    get timerPickerMinuteLabelOther() {
      return "min.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "s";
    }
    get timerPickerSecondLabelOther() {
      return "s";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Gaur";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEu.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "eu";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEu.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEu.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEu);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationEu);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationEu, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationEu.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEu, L2);
  generated_cupertino_localizations.CupertinoLocalizationFa = class CupertinoLocalizationFa extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "هشدار";
    }
    get anteMeridiemAbbreviation() {
      return "ق.ظ.";
    }
    get copyButtonLabel() {
      return "کپی";
    }
    get cutButtonLabel() {
      return "برش";
    }
    get datePickerDateOrderString() {
      return "ymd";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "ساعت $hour";
    }
    get datePickerHourSemanticsLabelOther() {
      return "ساعت $hour";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "۱ دقیقه";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute دقیقه";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "نپذیرفتن";
    }
    get pasteButtonLabel() {
      return "جای‌گذاری";
    }
    get postMeridiemAbbreviation() {
      return "ب.ظ.";
    }
    get selectAllButtonLabel() {
      return "انتخاب همه";
    }
    get tabSemanticsLabelRaw() {
      return "برگه $tabIndex از $tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "ساعت";
    }
    get timerPickerHourLabelOther() {
      return "ساعت";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "دقیقه";
    }
    get timerPickerMinuteLabelOther() {
      return "دقیقه";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "ثانیه";
    }
    get timerPickerSecondLabelOther() {
      return "ثانیه";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "امروز";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationFa.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "fa";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationFa.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationFa.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationFa);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationFa);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationFa, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationFa.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationFa, L2);
  generated_cupertino_localizations.CupertinoLocalizationFi = class CupertinoLocalizationFi extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Ilmoitus";
    }
    get anteMeridiemAbbreviation() {
      return "ap";
    }
    get copyButtonLabel() {
      return "Kopioi";
    }
    get cutButtonLabel() {
      return "Leikkaa";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "klo $hour";
    }
    get datePickerHourSemanticsLabelOther() {
      return "klo $hour";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minuutti";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minuuttia";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Ohita";
    }
    get pasteButtonLabel() {
      return "Liitä";
    }
    get postMeridiemAbbreviation() {
      return "ip";
    }
    get selectAllButtonLabel() {
      return "Valitse kaikki";
    }
    get tabSemanticsLabelRaw() {
      return "Välilehti $tabIndex/$tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "tunti";
    }
    get timerPickerHourLabelOther() {
      return "tuntia";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min";
    }
    get timerPickerMinuteLabelOther() {
      return "min";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "s";
    }
    get timerPickerSecondLabelOther() {
      return "s";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Tänään";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationFi.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "fi";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationFi.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationFi.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationFi);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationFi);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationFi, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationFi.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationFi, L2);
  generated_cupertino_localizations.CupertinoLocalizationFil = class CupertinoLocalizationFil extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Alerto";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Kopyahin";
    }
    get cutButtonLabel() {
      return "I-cut";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "Ala $hour";
    }
    get datePickerHourSemanticsLabelOther() {
      return "Alas $hour";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minuto";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute na minuto";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "I-dismiss";
    }
    get pasteButtonLabel() {
      return "I-paste";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Piliin Lahat";
    }
    get tabSemanticsLabelRaw() {
      return "Tab $tabIndex ng $tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "oras";
    }
    get timerPickerHourLabelOther() {
      return "na oras";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min.";
    }
    get timerPickerMinuteLabelOther() {
      return "na min.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "seg.";
    }
    get timerPickerSecondLabelOther() {
      return "na seg.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Ngayon";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationFil.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "fil";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationFil.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationFil.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationFil);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationFil);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationFil, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationFil.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationFil, L2);
  generated_cupertino_localizations.CupertinoLocalizationFr = class CupertinoLocalizationFr extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Alerte";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Copier";
    }
    get cutButtonLabel() {
      return "Couper";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour heure";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour heures";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minute";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minutes";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Ignorer";
    }
    get pasteButtonLabel() {
      return "Coller";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Tout sélect.";
    }
    get tabSemanticsLabelRaw() {
      return "Onglet $tabIndex sur $tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "heure";
    }
    get timerPickerHourLabelOther() {
      return "heures";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "minute";
    }
    get timerPickerMinuteLabelOther() {
      return "minutes";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "s";
    }
    get timerPickerSecondLabelOther() {
      return "s";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "aujourd'hui";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationFr.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "fr";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationFr.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationFr.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationFr);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationFr);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationFr, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationFr.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationFr, L2);
  generated_cupertino_localizations.CupertinoLocalizationFrCa = class CupertinoLocalizationFrCa extends generated_cupertino_localizations.CupertinoLocalizationFr {
    get datePickerHourSemanticsLabelOne() {
      return "$hour heure";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour heures";
    }
    get anteMeridiemAbbreviation() {
      return "am";
    }
    get postMeridiemAbbreviation() {
      return "pm";
    }
    get todayLabel() {
      return "Aujourd'hui";
    }
    get timerPickerMinuteLabelOne() {
      return "min";
    }
    get timerPickerMinuteLabelOther() {
      return "min";
    }
    get selectAllButtonLabel() {
      return "Tout sélectionner";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationFrCa.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "fr_CA";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationFrCa.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationFrCa.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationFrCa);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationFrCa);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationFrCa, L2);
  generated_cupertino_localizations.CupertinoLocalizationGl = class CupertinoLocalizationGl extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Alerta";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get copyButtonLabel() {
      return "Copiar";
    }
    get cutButtonLabel() {
      return "Cortar";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minuto";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minutos";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Ignorar";
    }
    get pasteButtonLabel() {
      return "Pegar";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get selectAllButtonLabel() {
      return "Seleccionar todo";
    }
    get tabSemanticsLabelRaw() {
      return "Pestana $tabIndex de $tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "hora";
    }
    get timerPickerHourLabelOther() {
      return "horas";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min";
    }
    get timerPickerMinuteLabelOther() {
      return "min";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "s";
    }
    get timerPickerSecondLabelOther() {
      return "s";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Hoxe";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationGl.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "gl";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationGl.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationGl.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationGl);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationGl);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationGl, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationGl.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationGl, L2);
  generated_cupertino_localizations.CupertinoLocalizationGsw = class CupertinoLocalizationGsw extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Benachrichtigung";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Kopieren";
    }
    get cutButtonLabel() {
      return "Ausschneiden";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour Uhr";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour Uhr";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 Minute";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute Minuten";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Schließen";
    }
    get pasteButtonLabel() {
      return "Einsetzen";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Alles auswählen";
    }
    get tabSemanticsLabelRaw() {
      return "Tab $tabIndex von $tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "Stunde";
    }
    get timerPickerHourLabelOther() {
      return "Stunden";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "Min.";
    }
    get timerPickerMinuteLabelOther() {
      return "Min.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "s";
    }
    get timerPickerSecondLabelOther() {
      return "s";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Heute";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationGsw.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "gsw";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationGsw.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationGsw.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationGsw);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationGsw);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationGsw, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationGsw.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationGsw, L2);
  generated_cupertino_localizations.CupertinoLocalizationGu = class CupertinoLocalizationGu extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "અલર્ટ";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "કૉપિ કરો";
    }
    get cutButtonLabel() {
      return "કાપો";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour વાગ્યો છે";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour વાગ્યા છે";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 મિનિટ";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute મિનિટ";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "છોડી દો";
    }
    get pasteButtonLabel() {
      return "પેસ્ટ કરો";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "બધા પસંદ કરો";
    }
    get tabSemanticsLabelRaw() {
      return "$tabCountમાંથી $tabIndex ટૅબ";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "કલાક";
    }
    get timerPickerHourLabelOther() {
      return "કલાક";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "મિનિટ";
    }
    get timerPickerMinuteLabelOther() {
      return "મિનિટ";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "સેકન્ડ";
    }
    get timerPickerSecondLabelOther() {
      return "સેકન્ડ";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "આજે";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationGu.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "gu";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationGu.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationGu.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationGu);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationGu);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationGu, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationGu.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationGu, L2);
  generated_cupertino_localizations.CupertinoLocalizationHe = class CupertinoLocalizationHe extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "התראה";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "העתקה";
    }
    get cutButtonLabel() {
      return "גזירה";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return "$hour בדיוק";
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour בדיוק";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour בדיוק";
    }
    get datePickerHourSemanticsLabelTwo() {
      return "$hour בדיוק";
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return "$minute דקות";
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "דקה אחת";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute דקות";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return "$minute דקות";
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "סגירה";
    }
    get pasteButtonLabel() {
      return "הדבקה";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "בחירת הכול";
    }
    get tabSemanticsLabelRaw() {
      return "כרטיסייה $tabIndex מתוך $tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return "שעות";
    }
    get timerPickerHourLabelOne() {
      return "שעה";
    }
    get timerPickerHourLabelOther() {
      return "שעות";
    }
    get timerPickerHourLabelTwo() {
      return "שעות";
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return "דק’";
    }
    get timerPickerMinuteLabelOne() {
      return "דק’";
    }
    get timerPickerMinuteLabelOther() {
      return "דק’";
    }
    get timerPickerMinuteLabelTwo() {
      return "דק’";
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return "שנ’";
    }
    get timerPickerSecondLabelOne() {
      return "שנ’";
    }
    get timerPickerSecondLabelOther() {
      return "שנ’";
    }
    get timerPickerSecondLabelTwo() {
      return "שנ’";
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "היום";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationHe.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "he";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationHe.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationHe.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationHe);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationHe);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationHe, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationHe.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationHe, L2);
  generated_cupertino_localizations.CupertinoLocalizationHi = class CupertinoLocalizationHi extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "अलर्ट";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "कॉपी करें";
    }
    get cutButtonLabel() {
      return "काटें";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour बजे";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour बजे";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 मिनट";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute मिनट";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "खारिज करें";
    }
    get pasteButtonLabel() {
      return "चिपकाएं";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "सभी चुनें";
    }
    get tabSemanticsLabelRaw() {
      return "$tabCount का टैब $tabIndex";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "घंटा";
    }
    get timerPickerHourLabelOther() {
      return "घंटे";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "मिनट";
    }
    get timerPickerMinuteLabelOther() {
      return "मिनट";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "सेकंड";
    }
    get timerPickerSecondLabelOther() {
      return "सेकंड";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "आज";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationHi.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "hi";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationHi.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationHi.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationHi);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationHi);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationHi, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationHi.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationHi, L2);
  generated_cupertino_localizations.CupertinoLocalizationHr = class CupertinoLocalizationHr extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Upozorenje";
    }
    get anteMeridiemAbbreviation() {
      return "prijepodne";
    }
    get copyButtonLabel() {
      return "Kopiraj";
    }
    get cutButtonLabel() {
      return "Izreži";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return "$hour sata";
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour sat";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour sati";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return "$minute minute";
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "Jedna minuta";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minuta";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Odbaci";
    }
    get pasteButtonLabel() {
      return "Zalijepi";
    }
    get postMeridiemAbbreviation() {
      return "popodne";
    }
    get selectAllButtonLabel() {
      return "Odaberi sve";
    }
    get tabSemanticsLabelRaw() {
      return "Kartica $tabIndex od $tabCount";
    }
    get timerPickerHourLabelFew() {
      return "sata";
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "sat";
    }
    get timerPickerHourLabelOther() {
      return "sati";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return "min";
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min";
    }
    get timerPickerMinuteLabelOther() {
      return "min";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return "s";
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "s";
    }
    get timerPickerSecondLabelOther() {
      return "s";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Danas";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationHr.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "hr";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationHr.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationHr.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationHr);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationHr);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationHr, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationHr.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationHr, L2);
  generated_cupertino_localizations.CupertinoLocalizationHu = class CupertinoLocalizationHu extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Értesítés";
    }
    get anteMeridiemAbbreviation() {
      return "de.";
    }
    get copyButtonLabel() {
      return "Másolás";
    }
    get cutButtonLabel() {
      return "Kivágás";
    }
    get datePickerDateOrderString() {
      return "ymd";
    }
    get datePickerDateTimeOrderString() {
      return "date_dayPeriod_time";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour óra";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour óra";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 perc";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute perc";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Elvetés";
    }
    get pasteButtonLabel() {
      return "Beillesztés";
    }
    get postMeridiemAbbreviation() {
      return "du.";
    }
    get selectAllButtonLabel() {
      return "Összes kijelölése";
    }
    get tabSemanticsLabelRaw() {
      return "$tabCount/$tabIndex. lap";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "óra";
    }
    get timerPickerHourLabelOther() {
      return "óra";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "perc";
    }
    get timerPickerMinuteLabelOther() {
      return "perc";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "mp";
    }
    get timerPickerSecondLabelOther() {
      return "mp";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Ma";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationHu.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "hu";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationHu.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationHu.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationHu);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationHu);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationHu, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationHu.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationHu, L2);
  generated_cupertino_localizations.CupertinoLocalizationHy = class CupertinoLocalizationHy extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Ծանուցում";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Պատճենել";
    }
    get cutButtonLabel() {
      return "Կտրել";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour:00";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour:00";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 րոպե";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute րոպե";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Փակել";
    }
    get pasteButtonLabel() {
      return "Տեղադրել";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Նշել բոլորը";
    }
    get tabSemanticsLabelRaw() {
      return "Ներդիր $tabIndex՝ $tabCount-ից";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "ժամ";
    }
    get timerPickerHourLabelOther() {
      return "ժամ";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "րոպե";
    }
    get timerPickerMinuteLabelOther() {
      return "րոպե";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "վրկ";
    }
    get timerPickerSecondLabelOther() {
      return "վրկ";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Այսօր";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationHy.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "hy";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationHy.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationHy.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationHy);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationHy);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationHy, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationHy.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationHy, L2);
  generated_cupertino_localizations.CupertinoLocalizationId = class CupertinoLocalizationId extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Notifikasi";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Salin";
    }
    get cutButtonLabel() {
      return "Potong";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour tepat";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour tepat";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 menit";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute menit";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Tutup";
    }
    get pasteButtonLabel() {
      return "Tempel";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Pilih Semua";
    }
    get tabSemanticsLabelRaw() {
      return "Tab $tabIndex dari $tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "jam";
    }
    get timerPickerHourLabelOther() {
      return "jam";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "mnt.";
    }
    get timerPickerMinuteLabelOther() {
      return "mnt.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "dtk.";
    }
    get timerPickerSecondLabelOther() {
      return "dtk.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Hari ini";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationId.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "id";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationId.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationId.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationId);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationId);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationId, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationId.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationId, L2);
  generated_cupertino_localizations.CupertinoLocalizationIs = class CupertinoLocalizationIs extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Tilkynning";
    }
    get anteMeridiemAbbreviation() {
      return "f.h.";
    }
    get copyButtonLabel() {
      return "Afrita";
    }
    get cutButtonLabel() {
      return "Klippa";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "klukkan $hour";
    }
    get datePickerHourSemanticsLabelOther() {
      return "klukkan $hour";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 mínúta";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute mínútur";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Hunsa";
    }
    get pasteButtonLabel() {
      return "Líma";
    }
    get postMeridiemAbbreviation() {
      return "e.h.";
    }
    get selectAllButtonLabel() {
      return "Velja allt";
    }
    get tabSemanticsLabelRaw() {
      return "Flipi $tabIndex af $tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "klukkustund";
    }
    get timerPickerHourLabelOther() {
      return "klukkustundir";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "mín.";
    }
    get timerPickerMinuteLabelOther() {
      return "mín.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "sek.";
    }
    get timerPickerSecondLabelOther() {
      return "sek.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Í dag";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationIs.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "is";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationIs.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationIs.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationIs);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationIs);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationIs, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationIs.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationIs, L2);
  generated_cupertino_localizations.CupertinoLocalizationIt = class CupertinoLocalizationIt extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Avviso";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Copia";
    }
    get cutButtonLabel() {
      return "Taglia";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour in punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour in punto";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minuto";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minuti";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Ignora";
    }
    get pasteButtonLabel() {
      return "Incolla";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Seleziona tutto";
    }
    get tabSemanticsLabelRaw() {
      return "Scheda $tabIndex di $tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "ora";
    }
    get timerPickerHourLabelOther() {
      return "ore";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min.";
    }
    get timerPickerMinuteLabelOther() {
      return "min.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "sec.";
    }
    get timerPickerSecondLabelOther() {
      return "sec.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Oggi";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationIt.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "it";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationIt.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationIt.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationIt);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationIt);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationIt, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationIt.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationIt, L2);
  generated_cupertino_localizations.CupertinoLocalizationJa = class CupertinoLocalizationJa extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "通知";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "コピー";
    }
    get cutButtonLabel() {
      return "切り取り";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour時";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour時";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1分";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute分";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "閉じる";
    }
    get pasteButtonLabel() {
      return "貼り付け";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "すべて選択";
    }
    get tabSemanticsLabelRaw() {
      return "タブ: $tabIndex/$tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "時間";
    }
    get timerPickerHourLabelOther() {
      return "時間";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "分";
    }
    get timerPickerMinuteLabelOther() {
      return "分";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "秒";
    }
    get timerPickerSecondLabelOther() {
      return "秒";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "今日";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationJa.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ja";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationJa.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationJa.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationJa);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationJa);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationJa, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationJa.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationJa, L2);
  generated_cupertino_localizations.CupertinoLocalizationKa = class CupertinoLocalizationKa extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "გაფრთხილება";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "კოპირება";
    }
    get cutButtonLabel() {
      return "ამოჭრა";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_dayPeriod_time";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour საათი";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour საათი";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 წუთი";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute წუთი";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "დახურვა";
    }
    get pasteButtonLabel() {
      return "ჩასმა";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "ყველას არჩევა";
    }
    get tabSemanticsLabelRaw() {
      return "ჩანართი $tabIndex / $tabCount-დან";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "საათი";
    }
    get timerPickerHourLabelOther() {
      return "საათი";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "წთ";
    }
    get timerPickerMinuteLabelOther() {
      return "წთ";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "წმ";
    }
    get timerPickerSecondLabelOther() {
      return "წმ";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "დღეს";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationKa.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ka";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationKa.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationKa.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationKa);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationKa);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationKa, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationKa.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationKa, L2);
  generated_cupertino_localizations.CupertinoLocalizationKk = class CupertinoLocalizationKk extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Дабыл";
    }
    get anteMeridiemAbbreviation() {
      return "түстен кейін";
    }
    get copyButtonLabel() {
      return "Көшіру";
    }
    get cutButtonLabel() {
      return "Қию";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "Сағат: $hour";
    }
    get datePickerHourSemanticsLabelOther() {
      return "Сағат: $hour";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 минут";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute минут";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Жабу";
    }
    get pasteButtonLabel() {
      return "Қою";
    }
    get postMeridiemAbbreviation() {
      return "түстен кейін";
    }
    get selectAllButtonLabel() {
      return "Барлығын таңдау";
    }
    get tabSemanticsLabelRaw() {
      return "Қойынды: $tabIndex/$tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "сағат";
    }
    get timerPickerHourLabelOther() {
      return "сағат";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "мин";
    }
    get timerPickerMinuteLabelOther() {
      return "мин";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "сек";
    }
    get timerPickerSecondLabelOther() {
      return "сек";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Бүгін";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationKk.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "kk";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationKk.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationKk.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationKk);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationKk);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationKk, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationKk.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationKk, L2);
  generated_cupertino_localizations.CupertinoLocalizationKm = class CupertinoLocalizationKm extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "ជូនដំណឹង";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "ចម្លង";
    }
    get cutButtonLabel() {
      return "កាត់";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "ម៉ោង $hour";
    }
    get datePickerHourSemanticsLabelOther() {
      return "ម៉ោង $hour";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 នាទី";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute នាទី";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "ច្រាន​ចោល";
    }
    get pasteButtonLabel() {
      return "ដាក់​ចូល";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "ជ្រើសរើស​ទាំងអស់";
    }
    get tabSemanticsLabelRaw() {
      return "ផ្ទាំងទី $tabIndex នៃ $tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "ម៉ោង";
    }
    get timerPickerHourLabelOther() {
      return "ម៉ោង";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "នាទី";
    }
    get timerPickerMinuteLabelOther() {
      return "នាទី";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "វិនាទី";
    }
    get timerPickerSecondLabelOther() {
      return "វិនាទី";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "ថ្ងៃនេះ";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationKm.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "km";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationKm.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationKm.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationKm);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationKm);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationKm, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationKm.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationKm, L2);
  generated_cupertino_localizations.CupertinoLocalizationKn = class CupertinoLocalizationKn extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "ಎಚ್ಚರಿಕೆ";
    }
    get anteMeridiemAbbreviation() {
      return "ಬೆಳಿಗ್ಗೆ";
    }
    get copyButtonLabel() {
      return "ನಕಲಿಸಿ";
    }
    get cutButtonLabel() {
      return "ಕತ್ತರಿಸಿ";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour ಗಂಟೆ";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour ಗಂಟೆ";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 ನಿಮಿಷ";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute ನಿಮಿಷಗಳು";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "ವಜಾಗೊಳಿಸಿ";
    }
    get pasteButtonLabel() {
      return "ಅಂಟಿಸಿ";
    }
    get postMeridiemAbbreviation() {
      return "ಸಂಜೆ";
    }
    get selectAllButtonLabel() {
      return "ಎಲ್ಲವನ್ನೂ ಆಯ್ಕೆಮಾಡಿ";
    }
    get tabSemanticsLabelRaw() {
      return "$tabCount ರಲ್ಲಿನ $tabIndex ಟ್ಯಾಬ್";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "ಗಂಟೆ";
    }
    get timerPickerHourLabelOther() {
      return "ಗಂಟೆಗಳು";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "ನಿಮಿ.";
    }
    get timerPickerMinuteLabelOther() {
      return "ನಿಮಿ.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "ಸೆ.";
    }
    get timerPickerSecondLabelOther() {
      return "ಸೆ.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "ಇಂದು";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationKn.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "kn";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationKn.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationKn.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationKn);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationKn);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationKn, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationKn.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationKn, L2);
  generated_cupertino_localizations.CupertinoLocalizationKo = class CupertinoLocalizationKo extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "알림";
    }
    get anteMeridiemAbbreviation() {
      return "오전";
    }
    get copyButtonLabel() {
      return "복사";
    }
    get cutButtonLabel() {
      return "잘라냄";
    }
    get datePickerDateOrderString() {
      return "ymd";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour시 정각";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour시 정각";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1분";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute분";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "닫기";
    }
    get pasteButtonLabel() {
      return "붙여넣기";
    }
    get postMeridiemAbbreviation() {
      return "오후";
    }
    get selectAllButtonLabel() {
      return "전체 선택";
    }
    get tabSemanticsLabelRaw() {
      return "탭 $tabCount개 중 $tabIndex번째";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "시간";
    }
    get timerPickerHourLabelOther() {
      return "시간";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "분";
    }
    get timerPickerMinuteLabelOther() {
      return "분";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "초";
    }
    get timerPickerSecondLabelOther() {
      return "초";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "오늘";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationKo.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ko";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationKo.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationKo.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationKo);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationKo);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationKo, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationKo.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationKo, L2);
  generated_cupertino_localizations.CupertinoLocalizationKy = class CupertinoLocalizationKy extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Эскертүү";
    }
    get anteMeridiemAbbreviation() {
      return "түшкө чейин";
    }
    get copyButtonLabel() {
      return "Көчүрүү";
    }
    get cutButtonLabel() {
      return "Кесүү";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "Саат $hour";
    }
    get datePickerHourSemanticsLabelOther() {
      return "Саат $hour";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 мүнөт";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute мүнөт";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Жабуу";
    }
    get pasteButtonLabel() {
      return "Чаптоо";
    }
    get postMeridiemAbbreviation() {
      return "түштөн кийин";
    }
    get selectAllButtonLabel() {
      return "Баарын тандоо";
    }
    get tabSemanticsLabelRaw() {
      return "$tabCount ичинен $tabIndex-өтмөк";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "саат";
    }
    get timerPickerHourLabelOther() {
      return "саат";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "мүн.";
    }
    get timerPickerMinuteLabelOther() {
      return "мүн.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "сек.";
    }
    get timerPickerSecondLabelOther() {
      return "сек.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Бүгүн";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationKy.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ky";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationKy.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationKy.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationKy);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationKy);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationKy, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationKy.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationKy, L2);
  generated_cupertino_localizations.CupertinoLocalizationLo = class CupertinoLocalizationLo extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "ການເຕືອນ";
    }
    get anteMeridiemAbbreviation() {
      return "ກ່ອນທ່ຽງ";
    }
    get copyButtonLabel() {
      return "ສຳເນົາ";
    }
    get cutButtonLabel() {
      return "ຕັດ";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour ໂມງກົງ";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour ໂມງກົງ";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 ນາທີ";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute ນາທີ";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "ປິດໄວ້";
    }
    get pasteButtonLabel() {
      return "ວາງ";
    }
    get postMeridiemAbbreviation() {
      return "ຫຼັງທ່ຽງ";
    }
    get selectAllButtonLabel() {
      return "ເລືອກທັງໝົດ";
    }
    get tabSemanticsLabelRaw() {
      return "ແຖບທີ $tabIndex ຈາກທັງໝົດ $tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "ຊົ່ວໂມງ";
    }
    get timerPickerHourLabelOther() {
      return "ຊົ່ວໂມງ";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "ນທ.";
    }
    get timerPickerMinuteLabelOther() {
      return "ນທ.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "ວິ.";
    }
    get timerPickerSecondLabelOther() {
      return "ວິ.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "ມື້ນີ້";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationLo.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "lo";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationLo.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationLo.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationLo);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationLo);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationLo, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationLo.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationLo, L2);
  generated_cupertino_localizations.CupertinoLocalizationLt = class CupertinoLocalizationLt extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Įspėjimas";
    }
    get anteMeridiemAbbreviation() {
      return "priešpiet";
    }
    get copyButtonLabel() {
      return "Kopijuoti";
    }
    get cutButtonLabel() {
      return "Iškirpti";
    }
    get datePickerDateOrderString() {
      return "ymd";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return "$hour val.";
    }
    get datePickerHourSemanticsLabelMany() {
      return "$hour val.";
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour val.";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour val.";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return "$minute min.";
    }
    get datePickerMinuteSemanticsLabelMany() {
      return "$minute min.";
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 min.";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute min.";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Atsisakyti";
    }
    get pasteButtonLabel() {
      return "Įklijuoti";
    }
    get postMeridiemAbbreviation() {
      return "popiet";
    }
    get selectAllButtonLabel() {
      return "Pasirinkti viską";
    }
    get tabSemanticsLabelRaw() {
      return "$tabIndex skirtukas iš $tabCount";
    }
    get timerPickerHourLabelFew() {
      return "val.";
    }
    get timerPickerHourLabelMany() {
      return "val.";
    }
    get timerPickerHourLabelOne() {
      return "val.";
    }
    get timerPickerHourLabelOther() {
      return "val.";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return "min.";
    }
    get timerPickerMinuteLabelMany() {
      return "min.";
    }
    get timerPickerMinuteLabelOne() {
      return "min.";
    }
    get timerPickerMinuteLabelOther() {
      return "min.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return "sek.";
    }
    get timerPickerSecondLabelMany() {
      return "sek.";
    }
    get timerPickerSecondLabelOne() {
      return "sek.";
    }
    get timerPickerSecondLabelOther() {
      return "sek.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Šiandien";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationLt.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "lt";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationLt.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationLt.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationLt);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationLt);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationLt, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationLt.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationLt, L2);
  generated_cupertino_localizations.CupertinoLocalizationLv = class CupertinoLocalizationLv extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Brīdinājums";
    }
    get anteMeridiemAbbreviation() {
      return "priekšpusdienā";
    }
    get copyButtonLabel() {
      return "Kopēt";
    }
    get cutButtonLabel() {
      return "Izgriezt";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "plkst. $hour";
    }
    get datePickerHourSemanticsLabelOther() {
      return "plkst. $hour";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return "plkst. $hour";
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minūte";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minūtes";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return "$minute minūtes";
    }
    get modalBarrierDismissLabel() {
      return "Nerādīt";
    }
    get pasteButtonLabel() {
      return "Ielīmēt";
    }
    get postMeridiemAbbreviation() {
      return "pēcpusdienā";
    }
    get selectAllButtonLabel() {
      return "Atlasīt visu";
    }
    get tabSemanticsLabelRaw() {
      return "$tabIndex. cilne no $tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "h";
    }
    get timerPickerHourLabelOther() {
      return "h";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return "h";
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min";
    }
    get timerPickerMinuteLabelOther() {
      return "min";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return "min";
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "s";
    }
    get timerPickerSecondLabelOther() {
      return "s";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return "s";
    }
    get todayLabel() {
      return "Šodien";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationLv.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "lv";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationLv.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationLv.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationLv);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationLv);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationLv, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationLv.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationLv, L2);
  generated_cupertino_localizations.CupertinoLocalizationMk = class CupertinoLocalizationMk extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Предупредување";
    }
    get anteMeridiemAbbreviation() {
      return "ПРЕТПЛАДНЕ";
    }
    get copyButtonLabel() {
      return "Копирај";
    }
    get cutButtonLabel() {
      return "Исечи";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour часот";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour часот";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 минута";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute минути";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Отфрли";
    }
    get pasteButtonLabel() {
      return "Залепи";
    }
    get postMeridiemAbbreviation() {
      return "ПОПЛАДНЕ";
    }
    get selectAllButtonLabel() {
      return "Избери ги сите";
    }
    get tabSemanticsLabelRaw() {
      return "Картичка $tabIndex од $tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "час";
    }
    get timerPickerHourLabelOther() {
      return "часа";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "мин.";
    }
    get timerPickerMinuteLabelOther() {
      return "мин.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "сек.";
    }
    get timerPickerSecondLabelOther() {
      return "сек.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Денес";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationMk.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "mk";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationMk.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationMk.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationMk);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationMk);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationMk, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationMk.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationMk, L2);
  generated_cupertino_localizations.CupertinoLocalizationMl = class CupertinoLocalizationMl extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "മുന്നറിയിപ്പ്";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "പകർത്തുക";
    }
    get cutButtonLabel() {
      return "മുറിക്കുക";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour മണി";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour മണി";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "ഒരു മിനിറ്റ്";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute മിനിറ്റ്";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "നിരസിക്കുക";
    }
    get pasteButtonLabel() {
      return "ഒട്ടിക്കുക";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "എല്ലാം തിരഞ്ഞെടുക്കുക";
    }
    get tabSemanticsLabelRaw() {
      return "$tabCount ടാബിൽ $tabIndex-ാമത്തേത്";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "മണിക്കൂർ";
    }
    get timerPickerHourLabelOther() {
      return "മണിക്കൂർ";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "മിനിറ്റ്";
    }
    get timerPickerMinuteLabelOther() {
      return "മിനിറ്റ്";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "സെക്കൻഡ്";
    }
    get timerPickerSecondLabelOther() {
      return "സെക്കൻഡ്";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "ഇന്ന്";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationMl.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ml";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationMl.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationMl.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationMl);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationMl);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationMl, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationMl.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationMl, L2);
  generated_cupertino_localizations.CupertinoLocalizationMn = class CupertinoLocalizationMn extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Сэрэмжлүүлэг";
    }
    get anteMeridiemAbbreviation() {
      return "ӨГЛӨӨ";
    }
    get copyButtonLabel() {
      return "Хуулах";
    }
    get cutButtonLabel() {
      return "Таслах";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour цаг";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour цаг";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 минут";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute минут";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Үл хэрэгсэх";
    }
    get pasteButtonLabel() {
      return "Буулгах";
    }
    get postMeridiemAbbreviation() {
      return "ОРОЙ";
    }
    get selectAllButtonLabel() {
      return "Бүгдийг сонгох";
    }
    get tabSemanticsLabelRaw() {
      return "$tabCount-н $tabIndex-р таб";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "цаг";
    }
    get timerPickerHourLabelOther() {
      return "цаг";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "минут.";
    }
    get timerPickerMinuteLabelOther() {
      return "минут.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "секунд.";
    }
    get timerPickerSecondLabelOther() {
      return "секунд.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Өнөөдөр";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationMn.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "mn";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationMn.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationMn.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationMn);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationMn);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationMn, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationMn.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationMn, L2);
  generated_cupertino_localizations.CupertinoLocalizationMr = class CupertinoLocalizationMr extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "सूचना";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "कॉपी करा";
    }
    get cutButtonLabel() {
      return "कट करा";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour वाजता";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour वाजता";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "एक मिनिट";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute मिनिटे";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "डिसमिस करा";
    }
    get pasteButtonLabel() {
      return "पेस्ट करा";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "सर्व निवडा";
    }
    get tabSemanticsLabelRaw() {
      return "$tabCount पैकी $tabIndex टॅब";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "तास";
    }
    get timerPickerHourLabelOther() {
      return "तास";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "मि.";
    }
    get timerPickerMinuteLabelOther() {
      return "मि.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "से.";
    }
    get timerPickerSecondLabelOther() {
      return "से.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "आज";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationMr.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "mr";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationMr.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationMr.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationMr);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationMr);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationMr, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationMr.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationMr, L2);
  generated_cupertino_localizations.CupertinoLocalizationMs = class CupertinoLocalizationMs extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Makluman";
    }
    get anteMeridiemAbbreviation() {
      return "PG";
    }
    get copyButtonLabel() {
      return "Salin";
    }
    get cutButtonLabel() {
      return "Potong";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "Pukul $hour";
    }
    get datePickerHourSemanticsLabelOther() {
      return "Pukul $hour";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minit";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minit";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Tolak";
    }
    get pasteButtonLabel() {
      return "Tampal";
    }
    get postMeridiemAbbreviation() {
      return "PTG";
    }
    get selectAllButtonLabel() {
      return "Pilih Semua";
    }
    get tabSemanticsLabelRaw() {
      return "Tab $tabIndex daripada $tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "jam";
    }
    get timerPickerHourLabelOther() {
      return "jam";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "minit";
    }
    get timerPickerMinuteLabelOther() {
      return "minit";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "saat";
    }
    get timerPickerSecondLabelOther() {
      return "saat";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Hari ini";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationMs.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ms";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationMs.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationMs.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationMs);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationMs);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationMs, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationMs.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationMs, L2);
  generated_cupertino_localizations.CupertinoLocalizationMy = class CupertinoLocalizationMy extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "သတိပေးချက်";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "မိတ္တူကူးရန်";
    }
    get cutButtonLabel() {
      return "ဖြတ်ယူရန်";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour နာရီ";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour နာရီ";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "၁ မိနစ်";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute မိနစ်";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "ပယ်ရန်";
    }
    get pasteButtonLabel() {
      return "ကူးထည့်ရန်";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "အားလုံး ရွေးရန်";
    }
    get tabSemanticsLabelRaw() {
      return "တဘ် $tabCount ခုအနက် $tabIndex ခု";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "နာရီ";
    }
    get timerPickerHourLabelOther() {
      return "နာရီ";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "မိနစ်";
    }
    get timerPickerMinuteLabelOther() {
      return "မိနစ်";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "စက္ကန့်";
    }
    get timerPickerSecondLabelOther() {
      return "စက္ကန့်";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "ယနေ့";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationMy.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "my";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationMy.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationMy.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationMy);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationMy);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationMy, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationMy.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationMy, L2);
  generated_cupertino_localizations.CupertinoLocalizationNb = class CupertinoLocalizationNb extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Varsel";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Kopiér";
    }
    get cutButtonLabel() {
      return "Klipp ut";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour null-null";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour null-null";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minutt";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minutter";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Avvis";
    }
    get pasteButtonLabel() {
      return "Lim inn";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Velg alle";
    }
    get tabSemanticsLabelRaw() {
      return "Fane $tabIndex av $tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "time";
    }
    get timerPickerHourLabelOther() {
      return "timer";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min.";
    }
    get timerPickerMinuteLabelOther() {
      return "min.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "sek.";
    }
    get timerPickerSecondLabelOther() {
      return "sek.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "I dag";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationNb.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "nb";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationNb.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationNb.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationNb);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationNb);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationNb, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationNb.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationNb, L2);
  generated_cupertino_localizations.CupertinoLocalizationNe = class CupertinoLocalizationNe extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "अलर्ट";
    }
    get anteMeridiemAbbreviation() {
      return "पूर्वाह्न";
    }
    get copyButtonLabel() {
      return "प्रतिलिपि गर्नुहोस्";
    }
    get cutButtonLabel() {
      return "काट्नुहोस्";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour बजे";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour बजे";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "१ मिनेट";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute मिनेट";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "खारेज गर्नुहोस्";
    }
    get pasteButtonLabel() {
      return "टाँस्नुहोस्";
    }
    get postMeridiemAbbreviation() {
      return "अपराह्न";
    }
    get selectAllButtonLabel() {
      return "सबै चयन गर्नुहोस्";
    }
    get tabSemanticsLabelRaw() {
      return "$tabCount मध्ये $tabIndex ट्याब";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "घन्टा";
    }
    get timerPickerHourLabelOther() {
      return "घन्टा";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "मिनेट";
    }
    get timerPickerMinuteLabelOther() {
      return "मिनेट";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "सेकेन्ड";
    }
    get timerPickerSecondLabelOther() {
      return "सेकेन्ड";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "आज";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationNe.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ne";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationNe.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationNe.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationNe);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationNe);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationNe, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationNe.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationNe, L2);
  generated_cupertino_localizations.CupertinoLocalizationNl = class CupertinoLocalizationNl extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Melding";
    }
    get anteMeridiemAbbreviation() {
      return "am";
    }
    get copyButtonLabel() {
      return "Kopiëren";
    }
    get cutButtonLabel() {
      return "Knippen";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour uur";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour uur";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minuut";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minuten";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Sluiten";
    }
    get pasteButtonLabel() {
      return "Plakken";
    }
    get postMeridiemAbbreviation() {
      return "pm";
    }
    get selectAllButtonLabel() {
      return "Alles selecteren";
    }
    get tabSemanticsLabelRaw() {
      return "Tabblad $tabIndex van $tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "uur";
    }
    get timerPickerHourLabelOther() {
      return "uur";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min.";
    }
    get timerPickerMinuteLabelOther() {
      return "min.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "sec.";
    }
    get timerPickerSecondLabelOther() {
      return "sec.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Vandaag";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationNl.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "nl";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationNl.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationNl.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationNl);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationNl);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationNl, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationNl.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationNl, L2);
  generated_cupertino_localizations.CupertinoLocalizationNo = class CupertinoLocalizationNo extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Varsel";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Kopiér";
    }
    get cutButtonLabel() {
      return "Klipp ut";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour null-null";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour null-null";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minutt";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minutter";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Avvis";
    }
    get pasteButtonLabel() {
      return "Lim inn";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Velg alle";
    }
    get tabSemanticsLabelRaw() {
      return "Fane $tabIndex av $tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "time";
    }
    get timerPickerHourLabelOther() {
      return "timer";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min.";
    }
    get timerPickerMinuteLabelOther() {
      return "min.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "sek.";
    }
    get timerPickerSecondLabelOther() {
      return "sek.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "I dag";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationNo.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "no";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationNo.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationNo.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationNo);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationNo);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationNo, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationNo.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationNo, L2);
  generated_cupertino_localizations.CupertinoLocalizationOr = class CupertinoLocalizationOr extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "ଆଲର୍ଟ";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "କପି କରନ୍ତୁ";
    }
    get cutButtonLabel() {
      return "କଟ୍ କରନ୍ତୁ";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hourଟା";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hourଟା";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 ମିନିଟ୍";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute ମିନିଟ୍";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "ଖାରଜ କରନ୍ତୁ";
    }
    get pasteButtonLabel() {
      return "ପେଷ୍ଟ କରନ୍ତୁ";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "ସମସ୍ତ ଚୟନ କରନ୍ତୁ";
    }
    get tabSemanticsLabelRaw() {
      return "$tabCountର $tabIndex ଟାବ୍";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "ଘଣ୍ଟା";
    }
    get timerPickerHourLabelOther() {
      return "ଘଣ୍ଟା";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "ମିନିଟ୍";
    }
    get timerPickerMinuteLabelOther() {
      return "ମିନିଟ୍";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "ସେକେଣ୍ଡ";
    }
    get timerPickerSecondLabelOther() {
      return "ସେକେଣ୍ଡ";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "ଆଜି";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationOr.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "or";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationOr.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationOr.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationOr);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationOr);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationOr, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationOr.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationOr, L2);
  generated_cupertino_localizations.CupertinoLocalizationPa = class CupertinoLocalizationPa extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "ਸੁਚੇਤਨਾ";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "ਕਾਪੀ ਕਰੋ";
    }
    get cutButtonLabel() {
      return "ਕੱਟ ਕਰੋ";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour ਵਜੇ";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour ਵਜੇ";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 ਮਿੰਟ";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute ਮਿੰਟ";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "ਖਾਰਜ ਕਰੋ";
    }
    get pasteButtonLabel() {
      return "ਪੇਸਟ ਕਰੋ";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "ਸਭ ਚੁਣੋ";
    }
    get tabSemanticsLabelRaw() {
      return "$tabCount ਵਿੱਚੋਂ $tabIndex ਟੈਬ";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "ਘੰਟਾ";
    }
    get timerPickerHourLabelOther() {
      return "ਘੰਟੇ";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "ਮਿੰ.";
    }
    get timerPickerMinuteLabelOther() {
      return "ਮਿੰ.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "ਸਕਿੰ.";
    }
    get timerPickerSecondLabelOther() {
      return "ਸਕਿੰ.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "ਅੱਜ";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationPa.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "pa";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationPa.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationPa.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationPa);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationPa);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationPa, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationPa.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationPa, L2);
  generated_cupertino_localizations.CupertinoLocalizationPl = class CupertinoLocalizationPl extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Alert";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Kopiuj";
    }
    get cutButtonLabel() {
      return "Wytnij";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return "$hour";
    }
    get datePickerHourSemanticsLabelMany() {
      return "$hour";
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return "$minute minuty";
    }
    get datePickerMinuteSemanticsLabelMany() {
      return "$minute minut";
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minuta";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minuty";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Zamknij";
    }
    get pasteButtonLabel() {
      return "Wklej";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Wybierz wszystkie";
    }
    get tabSemanticsLabelRaw() {
      return "Karta $tabIndex z $tabCount";
    }
    get timerPickerHourLabelFew() {
      return "godziny";
    }
    get timerPickerHourLabelMany() {
      return "godzin";
    }
    get timerPickerHourLabelOne() {
      return "godzina";
    }
    get timerPickerHourLabelOther() {
      return "godziny";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return "min";
    }
    get timerPickerMinuteLabelMany() {
      return "min";
    }
    get timerPickerMinuteLabelOne() {
      return "min";
    }
    get timerPickerMinuteLabelOther() {
      return "min";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return "s";
    }
    get timerPickerSecondLabelMany() {
      return "s";
    }
    get timerPickerSecondLabelOne() {
      return "s";
    }
    get timerPickerSecondLabelOther() {
      return "s";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Dziś";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationPl.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "pl";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationPl.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationPl.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationPl);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationPl);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationPl, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationPl.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationPl, L2);
  generated_cupertino_localizations.CupertinoLocalizationPt = class CupertinoLocalizationPt extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Alerta";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Copiar";
    }
    get cutButtonLabel() {
      return "Cortar";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour hora";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour horas";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minuto";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minutos";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Dispensar";
    }
    get pasteButtonLabel() {
      return "Colar";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Selecionar Tudo";
    }
    get tabSemanticsLabelRaw() {
      return "Guia $tabIndex de $tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "hora";
    }
    get timerPickerHourLabelOther() {
      return "horas";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min";
    }
    get timerPickerMinuteLabelOther() {
      return "min";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "s";
    }
    get timerPickerSecondLabelOther() {
      return "s";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Hoje";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationPt.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "pt";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationPt.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationPt.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationPt);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationPt);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationPt, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationPt.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationPt, L2);
  generated_cupertino_localizations.CupertinoLocalizationPtPt = class CupertinoLocalizationPtPt extends generated_cupertino_localizations.CupertinoLocalizationPt {
    get tabSemanticsLabelRaw() {
      return "Separador $tabIndex de $tabCount";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour hora";
    }
    get timerPickerSecondLabelOne() {
      return "seg";
    }
    get timerPickerSecondLabelOther() {
      return "seg";
    }
    get selectAllButtonLabel() {
      return "Selecionar tudo";
    }
    get modalBarrierDismissLabel() {
      return "Ignorar";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationPtPt.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "pt_PT";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationPtPt.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationPtPt.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationPtPt);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationPtPt);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationPtPt, L2);
  generated_cupertino_localizations.CupertinoLocalizationRo = class CupertinoLocalizationRo extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Alertă";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get copyButtonLabel() {
      return "Copiați";
    }
    get cutButtonLabel() {
      return "Decupați";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return "Ora $hour";
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "Ora $hour";
    }
    get datePickerHourSemanticsLabelOther() {
      return "Ora $hour";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return "$minute minute";
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minut";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute de minute";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Închideți";
    }
    get pasteButtonLabel() {
      return "Inserați";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get selectAllButtonLabel() {
      return "Selectați-le pe toate";
    }
    get tabSemanticsLabelRaw() {
      return "Fila $tabIndex din $tabCount";
    }
    get timerPickerHourLabelFew() {
      return "ore";
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "oră";
    }
    get timerPickerHourLabelOther() {
      return "de ore";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return "min.";
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min.";
    }
    get timerPickerMinuteLabelOther() {
      return "min.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return "sec.";
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "sec.";
    }
    get timerPickerSecondLabelOther() {
      return "sec.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Azi";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationRo.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ro";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationRo.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationRo.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationRo);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationRo);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationRo, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationRo.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationRo, L2);
  generated_cupertino_localizations.CupertinoLocalizationRu = class CupertinoLocalizationRu extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Оповещение";
    }
    get anteMeridiemAbbreviation() {
      return "АМ";
    }
    get copyButtonLabel() {
      return "Копировать";
    }
    get cutButtonLabel() {
      return "Вырезать";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return "$hour часа";
    }
    get datePickerHourSemanticsLabelMany() {
      return "$hour часов";
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour час";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour часа";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return "$minute минуты";
    }
    get datePickerMinuteSemanticsLabelMany() {
      return "$minute минут";
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 минута";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute минуты";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Закрыть";
    }
    get pasteButtonLabel() {
      return "Вставить";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Выбрать все";
    }
    get tabSemanticsLabelRaw() {
      return "Вкладка $tabIndex из $tabCount";
    }
    get timerPickerHourLabelFew() {
      return "часа";
    }
    get timerPickerHourLabelMany() {
      return "часов";
    }
    get timerPickerHourLabelOne() {
      return "час";
    }
    get timerPickerHourLabelOther() {
      return "часа";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return "мин.";
    }
    get timerPickerMinuteLabelMany() {
      return "мин.";
    }
    get timerPickerMinuteLabelOne() {
      return "мин.";
    }
    get timerPickerMinuteLabelOther() {
      return "мин.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return "сек.";
    }
    get timerPickerSecondLabelMany() {
      return "сек.";
    }
    get timerPickerSecondLabelOne() {
      return "сек.";
    }
    get timerPickerSecondLabelOther() {
      return "сек.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Сегодня";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationRu.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ru";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationRu.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationRu.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationRu);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationRu);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationRu, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationRu.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationRu, L2);
  generated_cupertino_localizations.CupertinoLocalizationSi = class CupertinoLocalizationSi extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "ඇඟවීම";
    }
    get anteMeridiemAbbreviation() {
      return "පෙ.ව.";
    }
    get copyButtonLabel() {
      return "පිටපත් කරන්න";
    }
    get cutButtonLabel() {
      return "කපන්න";
    }
    get datePickerDateOrderString() {
      return "ymd";
    }
    get datePickerDateTimeOrderString() {
      return "date_dayPeriod_time";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hourයි";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hourයි";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "මිනිත්තු 1";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "මිනිත්තු $minute";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "ඉවත ලන්න";
    }
    get pasteButtonLabel() {
      return "අලවන්න";
    }
    get postMeridiemAbbreviation() {
      return "ප.ව.";
    }
    get selectAllButtonLabel() {
      return "සියල්ල තෝරන්න";
    }
    get tabSemanticsLabelRaw() {
      return "ටැබ $tabCount න් $tabIndex";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "පැය";
    }
    get timerPickerHourLabelOther() {
      return "පැය";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "මිනි.";
    }
    get timerPickerMinuteLabelOther() {
      return "මිනි.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "තත්.";
    }
    get timerPickerSecondLabelOther() {
      return "තත්.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "අද";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationSi.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "si";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationSi.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationSi.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationSi);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationSi);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationSi, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationSi.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationSi, L2);
  generated_cupertino_localizations.CupertinoLocalizationSk = class CupertinoLocalizationSk extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Upozornenie";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Kopírovať";
    }
    get cutButtonLabel() {
      return "Vystrihnúť";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return "$hour hodiny";
    }
    get datePickerHourSemanticsLabelMany() {
      return "$hour hodiny";
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour hodina";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour hodín";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return "$minute minúty";
    }
    get datePickerMinuteSemanticsLabelMany() {
      return "$minute minúty";
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minúta";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minút";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Odmietnuť";
    }
    get pasteButtonLabel() {
      return "Prilepiť";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Vybrať všetko";
    }
    get tabSemanticsLabelRaw() {
      return "Karta $tabIndex z $tabCount";
    }
    get timerPickerHourLabelFew() {
      return "hodiny";
    }
    get timerPickerHourLabelMany() {
      return "hodiny";
    }
    get timerPickerHourLabelOne() {
      return "hodina";
    }
    get timerPickerHourLabelOther() {
      return "hodín";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return "min";
    }
    get timerPickerMinuteLabelMany() {
      return "min";
    }
    get timerPickerMinuteLabelOne() {
      return "min";
    }
    get timerPickerMinuteLabelOther() {
      return "min";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return "s";
    }
    get timerPickerSecondLabelMany() {
      return "s";
    }
    get timerPickerSecondLabelOne() {
      return "s";
    }
    get timerPickerSecondLabelOther() {
      return "s";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Dnes";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationSk.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "sk";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationSk.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationSk.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationSk);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationSk);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationSk, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationSk.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationSk, L2);
  generated_cupertino_localizations.CupertinoLocalizationSl = class CupertinoLocalizationSl extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Opozorilo";
    }
    get anteMeridiemAbbreviation() {
      return "DOP.";
    }
    get copyButtonLabel() {
      return "Kopiraj";
    }
    get cutButtonLabel() {
      return "Izreži";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return "$hour";
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour";
    }
    get datePickerHourSemanticsLabelTwo() {
      return "$hour";
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return "$minute minute";
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minuta";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minut";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return "$minute minuti";
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Opusti";
    }
    get pasteButtonLabel() {
      return "Prilepi";
    }
    get postMeridiemAbbreviation() {
      return "POP.";
    }
    get selectAllButtonLabel() {
      return "Izberi vse";
    }
    get tabSemanticsLabelRaw() {
      return "Zavihek $tabIndex od $tabCount";
    }
    get timerPickerHourLabelFew() {
      return "ure";
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "ura";
    }
    get timerPickerHourLabelOther() {
      return "ure";
    }
    get timerPickerHourLabelTwo() {
      return "ure";
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return "min";
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min";
    }
    get timerPickerMinuteLabelOther() {
      return "min";
    }
    get timerPickerMinuteLabelTwo() {
      return "min";
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return "s";
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "s";
    }
    get timerPickerSecondLabelOther() {
      return "s";
    }
    get timerPickerSecondLabelTwo() {
      return "s";
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Danes";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationSl.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "sl";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationSl.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationSl.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationSl);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationSl);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationSl, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationSl.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationSl, L2);
  generated_cupertino_localizations.CupertinoLocalizationSq = class CupertinoLocalizationSq extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Sinjalizim";
    }
    get anteMeridiemAbbreviation() {
      return "paradite";
    }
    get copyButtonLabel() {
      return "Kopjo";
    }
    get cutButtonLabel() {
      return "Prit";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour fiks";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour fiks";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minutë";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minuta";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Hiq";
    }
    get pasteButtonLabel() {
      return "Ngjit";
    }
    get postMeridiemAbbreviation() {
      return "pasdite";
    }
    get selectAllButtonLabel() {
      return "Zgjidhi të gjitha";
    }
    get tabSemanticsLabelRaw() {
      return "Skeda $tabIndex nga $tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "orë";
    }
    get timerPickerHourLabelOther() {
      return "orë";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min.";
    }
    get timerPickerMinuteLabelOther() {
      return "min.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "sek.";
    }
    get timerPickerSecondLabelOther() {
      return "sek.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Sot";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationSq.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "sq";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationSq.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationSq.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationSq);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationSq);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationSq, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationSq.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationSq, L2);
  generated_cupertino_localizations.CupertinoLocalizationSr = class CupertinoLocalizationSr extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Обавештење";
    }
    get anteMeridiemAbbreviation() {
      return "пре подне";
    }
    get copyButtonLabel() {
      return "Копирај";
    }
    get cutButtonLabel() {
      return "Исеци";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return "$hour сата";
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour сат";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour сати";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return "$minute минута";
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 минут";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute минута";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Одбаци";
    }
    get pasteButtonLabel() {
      return "Налепи";
    }
    get postMeridiemAbbreviation() {
      return "по подне";
    }
    get selectAllButtonLabel() {
      return "Изабери све";
    }
    get tabSemanticsLabelRaw() {
      return "$tabIndex. картица од $tabCount";
    }
    get timerPickerHourLabelFew() {
      return "сата";
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "сат";
    }
    get timerPickerHourLabelOther() {
      return "сати";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return "мин";
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "мин";
    }
    get timerPickerMinuteLabelOther() {
      return "мин";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return "сек";
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "сек";
    }
    get timerPickerSecondLabelOther() {
      return "сек";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Данас";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationSr.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "sr";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationSr.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationSr.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationSr);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationSr);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationSr, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationSr.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationSr, L2);
  generated_cupertino_localizations.CupertinoLocalizationSrCyrl = class CupertinoLocalizationSrCyrl extends generated_cupertino_localizations.CupertinoLocalizationSr {};
  (generated_cupertino_localizations.CupertinoLocalizationSrCyrl.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "sr_Cyrl";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationSrCyrl.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationSrCyrl.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationSrCyrl);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationSrCyrl);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationSrCyrl, L2);
  generated_cupertino_localizations.CupertinoLocalizationSrLatn = class CupertinoLocalizationSrLatn extends generated_cupertino_localizations.CupertinoLocalizationSr {
    get alertDialogLabel() {
      return "Obaveštenje";
    }
    get anteMeridiemAbbreviation() {
      return "pre podne";
    }
    get copyButtonLabel() {
      return "Kopiraj";
    }
    get cutButtonLabel() {
      return "Iseci";
    }
    get datePickerHourSemanticsLabelFew() {
      return "$hour sata";
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour sat";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour sati";
    }
    get datePickerMinuteSemanticsLabelFew() {
      return "$minute minuta";
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minut";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minuta";
    }
    get modalBarrierDismissLabel() {
      return "Odbaci";
    }
    get pasteButtonLabel() {
      return "Nalepi";
    }
    get postMeridiemAbbreviation() {
      return "po podne";
    }
    get selectAllButtonLabel() {
      return "Izaberi sve";
    }
    get tabSemanticsLabelRaw() {
      return "$tabIndex. kartica od $tabCount";
    }
    get timerPickerHourLabelFew() {
      return "sata";
    }
    get timerPickerHourLabelOne() {
      return "sat";
    }
    get timerPickerHourLabelOther() {
      return "sati";
    }
    get timerPickerMinuteLabelFew() {
      return "min";
    }
    get timerPickerMinuteLabelOne() {
      return "min";
    }
    get timerPickerMinuteLabelOther() {
      return "min";
    }
    get timerPickerSecondLabelFew() {
      return "sek";
    }
    get timerPickerSecondLabelOne() {
      return "sek";
    }
    get timerPickerSecondLabelOther() {
      return "sek";
    }
    get todayLabel() {
      return "Danas";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationSrLatn.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "sr_Latn";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationSrLatn.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationSrLatn.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationSrLatn);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationSrLatn);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationSrLatn, L2);
  generated_cupertino_localizations.CupertinoLocalizationSv = class CupertinoLocalizationSv extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Varning";
    }
    get anteMeridiemAbbreviation() {
      return "FM";
    }
    get copyButtonLabel() {
      return "Kopiera";
    }
    get cutButtonLabel() {
      return "Klipp ut";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "Klockan $hour";
    }
    get datePickerHourSemanticsLabelOther() {
      return "Klockan $hour";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minut";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minuter";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Stäng";
    }
    get pasteButtonLabel() {
      return "Klistra in";
    }
    get postMeridiemAbbreviation() {
      return "EM";
    }
    get selectAllButtonLabel() {
      return "Markera alla";
    }
    get tabSemanticsLabelRaw() {
      return "Flik $tabIndex av $tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "timme";
    }
    get timerPickerHourLabelOther() {
      return "timmar";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min";
    }
    get timerPickerMinuteLabelOther() {
      return "min";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "sek";
    }
    get timerPickerSecondLabelOther() {
      return "sek";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "I dag";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationSv.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "sv";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationSv.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationSv.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationSv);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationSv);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationSv, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationSv.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationSv, L2);
  generated_cupertino_localizations.CupertinoLocalizationSw = class CupertinoLocalizationSw extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Arifa";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Nakili";
    }
    get cutButtonLabel() {
      return "Kata";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "Saa $hour kamili";
    }
    get datePickerHourSemanticsLabelOther() {
      return "Saa $hour kamili";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "Dakika 1";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "Dakika $minute";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Ondoa";
    }
    get pasteButtonLabel() {
      return "Bandika";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Teua Zote";
    }
    get tabSemanticsLabelRaw() {
      return "Kichupo cha $tabIndex kati ya $tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "saa";
    }
    get timerPickerHourLabelOther() {
      return "saa";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "dakika";
    }
    get timerPickerMinuteLabelOther() {
      return "dakika";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "sekunde";
    }
    get timerPickerSecondLabelOther() {
      return "sekunde";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Leo";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationSw.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "sw";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationSw.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationSw.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationSw);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationSw);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationSw, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationSw.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationSw, L2);
  generated_cupertino_localizations.CupertinoLocalizationTa = class CupertinoLocalizationTa extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "விழிப்பூட்டல்";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "நகலெடு";
    }
    get cutButtonLabel() {
      return "வெட்டு";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour மணி";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour மணி";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 நிமிடம்";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute நிமிடங்கள்";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "நிராகரிக்கும்";
    }
    get pasteButtonLabel() {
      return "ஒட்டு";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "எல்லாம் தேர்ந்தெடு";
    }
    get tabSemanticsLabelRaw() {
      return "தாவல் $tabIndex / $tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "மணிநேரம்";
    }
    get timerPickerHourLabelOther() {
      return "மணிநேரம்";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "நிமி.";
    }
    get timerPickerMinuteLabelOther() {
      return "நிமி.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "வி.";
    }
    get timerPickerSecondLabelOther() {
      return "வி.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "இன்று";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationTa.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ta";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationTa.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationTa.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationTa);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationTa);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationTa, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationTa.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationTa, L2);
  generated_cupertino_localizations.CupertinoLocalizationTe = class CupertinoLocalizationTe extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "అలర్ట్";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "కాపీ చేయి";
    }
    get cutButtonLabel() {
      return "కత్తిరించు";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour అవుతుంది";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour అవుతుంది";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 నిమిషం";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute నిమిషాలు";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "విస్మరించు";
    }
    get pasteButtonLabel() {
      return "అతికించు";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "అన్నింటినీ ఎంచుకోండి";
    }
    get tabSemanticsLabelRaw() {
      return "$tabCountలో $tabIndexవ ట్యాబ్";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "గంట";
    }
    get timerPickerHourLabelOther() {
      return "గంటలు";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "నిమి.";
    }
    get timerPickerMinuteLabelOther() {
      return "నిమి.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "సెకన్లు.";
    }
    get timerPickerSecondLabelOther() {
      return "సెకన్లు.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "ఈరోజు";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationTe.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "te";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationTe.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationTe.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationTe);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationTe);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationTe, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationTe.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationTe, L2);
  generated_cupertino_localizations.CupertinoLocalizationTh = class CupertinoLocalizationTh extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "การแจ้งเตือน";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "คัดลอก";
    }
    get cutButtonLabel() {
      return "ตัด";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour นาฬิกา";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour นาฬิกา";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 นาที";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute นาที";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "ปิด";
    }
    get pasteButtonLabel() {
      return "วาง";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "เลือกทั้งหมด";
    }
    get tabSemanticsLabelRaw() {
      return "แท็บที่ $tabIndex จาก $tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "ชั่วโมง";
    }
    get timerPickerHourLabelOther() {
      return "ชั่วโมง";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "นาที";
    }
    get timerPickerMinuteLabelOther() {
      return "นาที";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "วินาที";
    }
    get timerPickerSecondLabelOther() {
      return "วินาที";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "วันนี้";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationTh.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "th";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationTh.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationTh.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationTh);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationTh);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationTh, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationTh.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationTh, L2);
  generated_cupertino_localizations.CupertinoLocalizationTl = class CupertinoLocalizationTl extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Alerto";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Kopyahin";
    }
    get cutButtonLabel() {
      return "I-cut";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "Ala $hour";
    }
    get datePickerHourSemanticsLabelOther() {
      return "Alas $hour";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minuto";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute na minuto";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "I-dismiss";
    }
    get pasteButtonLabel() {
      return "I-paste";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Piliin Lahat";
    }
    get tabSemanticsLabelRaw() {
      return "Tab $tabIndex ng $tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "oras";
    }
    get timerPickerHourLabelOther() {
      return "na oras";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min.";
    }
    get timerPickerMinuteLabelOther() {
      return "na min.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "seg.";
    }
    get timerPickerSecondLabelOther() {
      return "na seg.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Ngayon";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationTl.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "tl";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationTl.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationTl.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationTl);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationTl);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationTl, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationTl.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationTl, L2);
  generated_cupertino_localizations.CupertinoLocalizationTr = class CupertinoLocalizationTr extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Uyarı";
    }
    get anteMeridiemAbbreviation() {
      return "ÖÖ";
    }
    get copyButtonLabel() {
      return "Kopyala";
    }
    get cutButtonLabel() {
      return "Kes";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "Saat $hour";
    }
    get datePickerHourSemanticsLabelOther() {
      return "Saat $hour";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 dakika";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute dakika";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Kapat";
    }
    get pasteButtonLabel() {
      return "Yapıştır";
    }
    get postMeridiemAbbreviation() {
      return "ÖS";
    }
    get selectAllButtonLabel() {
      return "Tümünü Seç";
    }
    get tabSemanticsLabelRaw() {
      return "Sekme $tabIndex/$tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "saat";
    }
    get timerPickerHourLabelOther() {
      return "saat";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "dk.";
    }
    get timerPickerMinuteLabelOther() {
      return "dk.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "sn.";
    }
    get timerPickerSecondLabelOther() {
      return "sn.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Bugün";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationTr.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "tr";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationTr.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationTr.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationTr);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationTr);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationTr, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationTr.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationTr, L2);
  generated_cupertino_localizations.CupertinoLocalizationUk = class CupertinoLocalizationUk extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Сповіщення";
    }
    get anteMeridiemAbbreviation() {
      return "дп";
    }
    get copyButtonLabel() {
      return "Копіювати";
    }
    get cutButtonLabel() {
      return "Вирізати";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return "$hour години";
    }
    get datePickerHourSemanticsLabelMany() {
      return "$hour годин";
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour година";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour години";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return "$minute хвилини";
    }
    get datePickerMinuteSemanticsLabelMany() {
      return "$minute хвилин";
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 хвилина";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute хвилини";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Закрити";
    }
    get pasteButtonLabel() {
      return "Вставити";
    }
    get postMeridiemAbbreviation() {
      return "пп";
    }
    get selectAllButtonLabel() {
      return "Вибрати все";
    }
    get tabSemanticsLabelRaw() {
      return "Вкладка $tabIndex з $tabCount";
    }
    get timerPickerHourLabelFew() {
      return "години";
    }
    get timerPickerHourLabelMany() {
      return "годин";
    }
    get timerPickerHourLabelOne() {
      return "година";
    }
    get timerPickerHourLabelOther() {
      return "години";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return "хв";
    }
    get timerPickerMinuteLabelMany() {
      return "хв";
    }
    get timerPickerMinuteLabelOne() {
      return "хв";
    }
    get timerPickerMinuteLabelOther() {
      return "хв";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return "с";
    }
    get timerPickerSecondLabelMany() {
      return "с";
    }
    get timerPickerSecondLabelOne() {
      return "с";
    }
    get timerPickerSecondLabelOther() {
      return "с";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Сьогодні";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationUk.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "uk";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationUk.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationUk.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationUk);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationUk);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationUk, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationUk.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationUk, L2);
  generated_cupertino_localizations.CupertinoLocalizationUr = class CupertinoLocalizationUr extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "الرٹ";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "کاپی کریں";
    }
    get cutButtonLabel() {
      return "کٹ کریں";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour بجے";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour بجے";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 منٹ";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute منٹس";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "برخاست کریں";
    }
    get pasteButtonLabel() {
      return "پیسٹ کریں";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "سبھی منتخب کریں";
    }
    get tabSemanticsLabelRaw() {
      return "$tabCount میں سے $tabIndex ٹیب";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "گھنٹہ";
    }
    get timerPickerHourLabelOther() {
      return "گھنٹے";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "منٹ۔";
    }
    get timerPickerMinuteLabelOther() {
      return "منٹ۔";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "سیکنڈ۔";
    }
    get timerPickerSecondLabelOther() {
      return "سیکنڈ۔";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "آج";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationUr.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ur";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationUr.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationUr.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationUr);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationUr);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationUr, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationUr.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationUr, L2);
  generated_cupertino_localizations.CupertinoLocalizationUz = class CupertinoLocalizationUz extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Ogohlantirish";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Nusxa olish";
    }
    get cutButtonLabel() {
      return "Kesib olish";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour soat";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour soat";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 daqiqa";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute daqiqa";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Yopish";
    }
    get pasteButtonLabel() {
      return "Joylash";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Barchasini tanlash";
    }
    get tabSemanticsLabelRaw() {
      return "$tabCount varaqdan $tabIndex";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "soat";
    }
    get timerPickerHourLabelOther() {
      return "soat";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "daqiqa";
    }
    get timerPickerMinuteLabelOther() {
      return "daqiqa";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "soniya";
    }
    get timerPickerSecondLabelOther() {
      return "soniya";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Bugun";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationUz.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "uz";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationUz.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationUz.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationUz);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationUz);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationUz, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationUz.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationUz, L2);
  generated_cupertino_localizations.CupertinoLocalizationVi = class CupertinoLocalizationVi extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Thông báo";
    }
    get anteMeridiemAbbreviation() {
      return "SÁNG";
    }
    get copyButtonLabel() {
      return "Sao chép";
    }
    get cutButtonLabel() {
      return "Cắt";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour giờ";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour giờ";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 phút";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute phút";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Bỏ qua";
    }
    get pasteButtonLabel() {
      return "Dán";
    }
    get postMeridiemAbbreviation() {
      return "CHIỀU";
    }
    get selectAllButtonLabel() {
      return "Chọn tất cả";
    }
    get tabSemanticsLabelRaw() {
      return "Thẻ $tabIndex/$tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "giờ";
    }
    get timerPickerHourLabelOther() {
      return "giờ";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "phút";
    }
    get timerPickerMinuteLabelOther() {
      return "phút";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "giây";
    }
    get timerPickerSecondLabelOther() {
      return "giây";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Hôm nay";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationVi.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "vi";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationVi.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationVi.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationVi);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationVi);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationVi, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationVi.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationVi, L2);
  generated_cupertino_localizations.CupertinoLocalizationZh = class CupertinoLocalizationZh extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "提醒";
    }
    get anteMeridiemAbbreviation() {
      return "上午";
    }
    get copyButtonLabel() {
      return "复制";
    }
    get cutButtonLabel() {
      return "剪切";
    }
    get datePickerDateOrderString() {
      return "ymd";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour 点";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour 点";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 分钟";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute 分钟";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "关闭";
    }
    get pasteButtonLabel() {
      return "粘贴";
    }
    get postMeridiemAbbreviation() {
      return "下午";
    }
    get selectAllButtonLabel() {
      return "全选";
    }
    get tabSemanticsLabelRaw() {
      return "第 $tabIndex 个标签，共 $tabCount 个";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "小时";
    }
    get timerPickerHourLabelOther() {
      return "小时";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "分钟";
    }
    get timerPickerMinuteLabelOther() {
      return "分钟";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "秒";
    }
    get timerPickerSecondLabelOther() {
      return "秒";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "今天";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationZh.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "zh";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationZh.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationZh.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationZh);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationZh);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationZh, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationZh.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationZh, L2);
  generated_cupertino_localizations.CupertinoLocalizationZhHans = class CupertinoLocalizationZhHans extends generated_cupertino_localizations.CupertinoLocalizationZh {};
  (generated_cupertino_localizations.CupertinoLocalizationZhHans.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "zh_Hans";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationZhHans.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationZhHans.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationZhHans);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationZhHans);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationZhHans, L2);
  generated_cupertino_localizations.CupertinoLocalizationZhHant = class CupertinoLocalizationZhHant extends generated_cupertino_localizations.CupertinoLocalizationZh {
    get alertDialogLabel() {
      return "通知";
    }
    get copyButtonLabel() {
      return "複製";
    }
    get cutButtonLabel() {
      return "剪下";
    }
    get datePickerDateTimeOrderString() {
      return "date_dayPeriod_time";
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour 點";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour 點";
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 分鐘";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute 分鐘";
    }
    get modalBarrierDismissLabel() {
      return "拒絕";
    }
    get pasteButtonLabel() {
      return "貼上";
    }
    get selectAllButtonLabel() {
      return "全選";
    }
    get tabSemanticsLabelRaw() {
      return "$tabCount 個分頁中嘅第 $tabIndex 個";
    }
    get timerPickerHourLabelOne() {
      return "小時";
    }
    get timerPickerHourLabelOther() {
      return "小時";
    }
    get timerPickerMinuteLabelOne() {
      return "分鐘";
    }
    get timerPickerMinuteLabelOther() {
      return "分鐘";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationZhHant.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "zh_Hant";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationZhHant.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationZhHant.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationZhHant);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationZhHant);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationZhHant, L2);
  generated_cupertino_localizations.CupertinoLocalizationZhHantHk = class CupertinoLocalizationZhHantHk extends generated_cupertino_localizations.CupertinoLocalizationZhHant {};
  (generated_cupertino_localizations.CupertinoLocalizationZhHantHk.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "zh_Hant_HK";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationZhHantHk.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationZhHantHk.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationZhHantHk);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationZhHantHk);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationZhHantHk, L2);
  generated_cupertino_localizations.CupertinoLocalizationZhHantTw = class CupertinoLocalizationZhHantTw extends generated_cupertino_localizations.CupertinoLocalizationZhHant {
    get tabSemanticsLabelRaw() {
      return "第 $tabIndex 個分頁標籤，共 $tabCount 個";
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 分";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute 分";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get alertDialogLabel() {
      return "快訊";
    }
    get timerPickerMinuteLabelOne() {
      return "分";
    }
    get timerPickerMinuteLabelOther() {
      return "分";
    }
    get modalBarrierDismissLabel() {
      return "關閉";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationZhHantTw.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "zh_Hant_TW";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationZhHantTw.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationZhHantTw.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationZhHantTw);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationZhHantTw);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationZhHantTw, L2);
  generated_cupertino_localizations.CupertinoLocalizationZu = class CupertinoLocalizationZu extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Isexwayiso";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Kopisha";
    }
    get cutButtonLabel() {
      return "Sika";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour ezimpondweni";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour ezimpondweni";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 iminithi";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute amaminithi";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get modalBarrierDismissLabel() {
      return "Cashisa";
    }
    get pasteButtonLabel() {
      return "Namathisela";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Khetha konke";
    }
    get tabSemanticsLabelRaw() {
      return "Ithebhu $tabIndex kwangu-$tabCount";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "ihora";
    }
    get timerPickerHourLabelOther() {
      return "amahora";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "iminithi.";
    }
    get timerPickerMinuteLabelOther() {
      return "iminithi.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "isekhondi.";
    }
    get timerPickerSecondLabelOther() {
      return "isekhondi.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Namuhla";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationZu.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "zu";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationZu.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationZu.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationZu);
  dart.addTypeCaches(generated_cupertino_localizations.CupertinoLocalizationZu);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationZu, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationZu.__proto__),
    alertDialogLabel: dart.legacy(core.String),
    anteMeridiemAbbreviation: dart.legacy(core.String),
    copyButtonLabel: dart.legacy(core.String),
    cutButtonLabel: dart.legacy(core.String),
    datePickerDateOrderString: dart.legacy(core.String),
    datePickerDateTimeOrderString: dart.legacy(core.String),
    datePickerHourSemanticsLabelOther: dart.legacy(core.String),
    datePickerMinuteSemanticsLabelOther: dart.legacy(core.String),
    modalBarrierDismissLabel: dart.legacy(core.String),
    pasteButtonLabel: dart.legacy(core.String),
    postMeridiemAbbreviation: dart.legacy(core.String),
    selectAllButtonLabel: dart.legacy(core.String),
    tabSemanticsLabelRaw: dart.legacy(core.String),
    timerPickerHourLabelOther: dart.legacy(core.String),
    timerPickerMinuteLabelOther: dart.legacy(core.String),
    timerPickerSecondLabelOther: dart.legacy(core.String),
    todayLabel: dart.legacy(core.String)
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationZu, L2);
  generated_cupertino_localizations.getCupertinoTranslation = function getCupertinoTranslation(locale, fullYearFormat, dayFormat, mediumDateFormat, singleDigitHourFormat, singleDigitMinuteFormat, doubleDigitMinuteFormat, singleDigitSecondFormat, decimalFormat) {
    switch (locale.languageCode) {
      case "af":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationAf.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "am":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationAm.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "ar":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationAr.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "as":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationAs.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "az":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationAz.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "be":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationBe.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "bg":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationBg.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "bn":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationBn.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "bs":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationBs.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "ca":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationCa.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "cs":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationCs.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "da":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationDa.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "de":
      {
        {
          switch (locale.countryCode) {
            case "CH":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationDeCh.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
          }
          return new generated_cupertino_localizations.CupertinoLocalizationDe.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
        }
      }
      case "el":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationEl.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "en":
      {
        {
          switch (locale.countryCode) {
            case "AU":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEnAu.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "CA":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEnCa.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "GB":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEnGb.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "IE":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEnIe.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "IN":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEnIn.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "NZ":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEnNz.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "SG":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEnSg.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "ZA":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEnZa.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
          }
          return new generated_cupertino_localizations.CupertinoLocalizationEn.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
        }
      }
      case "es":
      {
        {
          switch (locale.countryCode) {
            case "419":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEs419.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "AR":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEsAr.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "BO":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEsBo.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "CL":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEsCl.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "CO":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEsCo.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "CR":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEsCr.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "DO":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEsDo.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "EC":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEsEc.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "GT":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEsGt.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "HN":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEsHn.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "MX":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEsMx.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "NI":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEsNi.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "PA":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEsPa.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "PE":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEsPe.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "PR":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEsPr.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "PY":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEsPy.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "SV":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEsSv.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "US":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEsUs.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "UY":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEsUy.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "VE":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEsVe.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
          }
          return new generated_cupertino_localizations.CupertinoLocalizationEs.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
        }
      }
      case "et":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationEt.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "eu":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationEu.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "fa":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationFa.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "fi":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationFi.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "fil":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationFil.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "fr":
      {
        {
          switch (locale.countryCode) {
            case "CA":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationFrCa.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
          }
          return new generated_cupertino_localizations.CupertinoLocalizationFr.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
        }
      }
      case "gl":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationGl.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "gsw":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationGsw.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "gu":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationGu.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "he":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationHe.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "hi":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationHi.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "hr":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationHr.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "hu":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationHu.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "hy":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationHy.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "id":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationId.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "is":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationIs.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "it":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationIt.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "ja":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationJa.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "ka":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationKa.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "kk":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationKk.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "km":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationKm.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "kn":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationKn.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "ko":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationKo.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "ky":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationKy.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "lo":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationLo.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "lt":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationLt.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "lv":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationLv.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "mk":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationMk.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "ml":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationMl.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "mn":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationMn.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "mr":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationMr.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "ms":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationMs.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "my":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationMy.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "nb":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationNb.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "ne":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationNe.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "nl":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationNl.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "no":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationNo.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "or":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationOr.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "pa":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationPa.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "pl":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationPl.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "pt":
      {
        {
          switch (locale.countryCode) {
            case "PT":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationPtPt.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
          }
          return new generated_cupertino_localizations.CupertinoLocalizationPt.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
        }
      }
      case "ro":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationRo.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "ru":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationRu.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "si":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationSi.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "sk":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationSk.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "sl":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationSl.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "sq":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationSq.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "sr":
      {
        {
          switch (locale.scriptCode) {
            case "Cyrl":
            {
              {
                return new generated_cupertino_localizations.CupertinoLocalizationSrCyrl.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
              }
            }
            case "Latn":
            {
              {
                return new generated_cupertino_localizations.CupertinoLocalizationSrLatn.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
              }
            }
          }
          return new generated_cupertino_localizations.CupertinoLocalizationSr.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
        }
      }
      case "sv":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationSv.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "sw":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationSw.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "ta":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationTa.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "te":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationTe.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "th":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationTh.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "tl":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationTl.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "tr":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationTr.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "uk":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationUk.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "ur":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationUr.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "uz":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationUz.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "vi":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationVi.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "zh":
      {
        {
          switch (locale.scriptCode) {
            case "Hans":
            {
              {
                return new generated_cupertino_localizations.CupertinoLocalizationZhHans.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
              }
            }
            case "Hant":
            {
              {
                switch (locale.countryCode) {
                  case "HK":
                  {
                    return new generated_cupertino_localizations.CupertinoLocalizationZhHantHk.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
                  }
                  case "TW":
                  {
                    return new generated_cupertino_localizations.CupertinoLocalizationZhHantTw.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
                  }
                }
                return new generated_cupertino_localizations.CupertinoLocalizationZhHant.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
              }
            }
          }
          switch (locale.countryCode) {
            case "HK":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationZhHantHk.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "TW":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationZhHantTw.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
          }
          return new generated_cupertino_localizations.CupertinoLocalizationZh.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
        }
      }
      case "zu":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationZu.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
    }
    if (!false) dart.assertFailed("getCupertinoTranslation() called for unsupported locale \"" + dart.str(locale) + "\"", L3, 13914, 10, "false");
    return null;
  };
  var C3;
  dart.defineLazy(generated_cupertino_localizations, {
    /*generated_cupertino_localizations.kCupertinoSupportedLanguages*/get kCupertinoSupportedLanguages() {
      return HashSetOfStringL().from(C3 || CT.C3);
    }
  }, true);
  cupertino_localizations._GlobalCupertinoLocalizationsDelegate = class _GlobalCupertinoLocalizationsDelegate extends localizations$.LocalizationsDelegate$(dart.legacy(localizations.CupertinoLocalizations)) {
    isSupported(locale) {
      return generated_cupertino_localizations.kCupertinoSupportedLanguages.contains(locale.languageCode);
    }
    load(locale) {
      if (!dart.test(this.isSupported(locale))) dart.assertFailed(null, L0, 436, 12, "isSupported(locale)");
      return cupertino_localizations._GlobalCupertinoLocalizationsDelegate._loadedTranslations[$putIfAbsent](locale, dart.fn(() => {
        date_localizations.loadDateIntlDataIfNotLoaded();
        let localeName = intl.Intl.canonicalizedLocale(dart.toString(locale));
        if (!(dart.toString(locale) == localeName)) dart.assertFailed("Flutter does not support the non-standard locale form " + dart.str(locale) + " (which " + "might be " + dart.str(localeName), L0, 442, 9, "locale.toString() == localeName");
        let fullYearFormat = null;
        let dayFormat = null;
        let mediumDateFormat = null;
        let singleDigitHourFormat = null;
        let singleDigitMinuteFormat = null;
        let doubleDigitMinuteFormat = null;
        let singleDigitSecondFormat = null;
        let decimalFormat = null;
        function loadFormats(locale) {
          fullYearFormat = new intl.DateFormat.y(locale);
          dayFormat = new intl.DateFormat.d(locale);
          mediumDateFormat = new intl.DateFormat.MMMEd(locale);
          singleDigitHourFormat = new intl.DateFormat.new("HH", locale);
          singleDigitMinuteFormat = new intl.DateFormat.m(locale);
          doubleDigitMinuteFormat = new intl.DateFormat.new("mm", locale);
          singleDigitSecondFormat = new intl.DateFormat.s(locale);
          decimalFormat = new intl.NumberFormat.decimalPattern(locale);
        }
        dart.fn(loadFormats, StringLTovoid());
        if (dart.test(intl.DateFormat.localeExists(localeName))) {
          loadFormats(localeName);
        } else if (dart.test(intl.DateFormat.localeExists(locale.languageCode))) {
          loadFormats(locale.languageCode);
        } else {
          loadFormats(null);
        }
        return new (SynchronousFutureOfCupertinoLocalizationsL()).new(generated_cupertino_localizations.getCupertinoTranslation(locale, fullYearFormat, dayFormat, mediumDateFormat, singleDigitHourFormat, singleDigitMinuteFormat, doubleDigitMinuteFormat, singleDigitSecondFormat, decimalFormat));
      }, VoidToSynchronousFutureLOfCupertinoLocalizationsL()));
    }
    shouldReload(old) {
      _GlobalCupertinoLocalizationsDelegateL().as(old);
      return false;
    }
    toString() {
      return "GlobalCupertinoLocalizations.delegate(" + dart.str(generated_cupertino_localizations.kCupertinoSupportedLanguages[$length]) + " locales)";
    }
  };
  (cupertino_localizations._GlobalCupertinoLocalizationsDelegate.new = function() {
    cupertino_localizations._GlobalCupertinoLocalizationsDelegate.__proto__.new.call(this);
    ;
  }).prototype = cupertino_localizations._GlobalCupertinoLocalizationsDelegate.prototype;
  dart.addTypeTests(cupertino_localizations._GlobalCupertinoLocalizationsDelegate);
  dart.addTypeCaches(cupertino_localizations._GlobalCupertinoLocalizationsDelegate);
  dart.setMethodSignature(cupertino_localizations._GlobalCupertinoLocalizationsDelegate, () => ({
    __proto__: dart.getMethods(cupertino_localizations._GlobalCupertinoLocalizationsDelegate.__proto__),
    isSupported: dart.fnType(dart.legacy(core.bool), [dart.legacy(ui.Locale)]),
    load: dart.fnType(dart.legacy(async.Future$(dart.legacy(localizations.CupertinoLocalizations))), [dart.legacy(ui.Locale)]),
    shouldReload: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)]),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(cupertino_localizations._GlobalCupertinoLocalizationsDelegate, L1);
  dart.defineExtensionMethods(cupertino_localizations._GlobalCupertinoLocalizationsDelegate, ['toString']);
  dart.defineLazy(cupertino_localizations._GlobalCupertinoLocalizationsDelegate, {
    /*cupertino_localizations._GlobalCupertinoLocalizationsDelegate._loadedTranslations*/get _loadedTranslations() {
      return new (LinkedMapOfLocaleL$FutureLOfCupertinoLocalizationsL()).new();
    }
  }, true);
  dart.trackLibraries("packages/flutter_localizations/src/l10n/generated_cupertino_localizations.dart", {
    "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart": generated_cupertino_localizations,
    "package:flutter_localizations/src/cupertino_localizations.dart": cupertino_localizations
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["../cupertino_localizations.dart","generated_cupertino_localizations.dart"],"names":[],"mappings":"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","file":"../../../../../../packages/flutter_localizations/src/l10n/generated_cupertino_localizations.dart.lib.js"}');
  // Exports:
  return {
    src__l10n__generated_cupertino_localizations: generated_cupertino_localizations,
    src__cupertino_localizations: cupertino_localizations
  };
}));

//# sourceMappingURL=generated_cupertino_localizations.dart.lib.js.map
